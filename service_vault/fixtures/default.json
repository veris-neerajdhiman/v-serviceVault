[{"model": "service_vault.servicevault", "pk": 40, "fields": {"name": "NoApp Organizations", "description": "ss", "uuid": "bfa69060-a4ab-4c4c-996e-129f95bc1bf2", "request_host": "organizations.veris.in", "upstream_url": "http://local.veris.in:8015", "swagger_schema": {"swagger": "2.0", "securityDefinitions": {"basic": {"type": "basic"}}, "info": {"title": "Organization-Member Micro-service API", "version": ""}, "paths": {"/micro-service/user/{owner}/organization/{organization}/member/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "owner", "description": "", "required": true}, {"in": "path", "type": "string", "name": "organization", "description": "Member Organization.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["name", "user", "type", "organization"], "type": "object", "properties": {"user": {"type": "string", "description": "User uuid, this uid will identify associated User with respective Member."}, "type": {"type": "string", "description": "Member type, for internal user only"}, "name": {"type": "string", "description": "Required. 64 characters or fewer."}, "organization": {"type": "string", "description": "Member Organization."}}}}], "description": ":param request: Django request\n:param owner: owner/user uuid\n:param organization: organization token.\n:return: Just created Organization", "operationId": "user_organization_member_create", "summary": ":param request: Django request", "tags": ["micro-service"]}, "get": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "", "required": true}, {"in": "path", "type": "string", "name": "organization", "description": "Member Organization.", "required": true}, {"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "user_organization_member_list", "tags": ["micro-service"], "responses": {"200": {"description": ""}}}}, "/micro-service/user/{owner}/organization/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["name", "avatar", "owner"], "type": "object", "properties": {"avatar": {"type": "string", "description": ""}, "name": {"type": "string", "description": "Required. 64 characters or fewer."}, "owner": {"type": "string", "description": "User uuid, this token will identify who is the owner of respective Organization."}}}}], "description": ":param request: Django request\n:param owner: owner/user uuid\n:return: Just created Organization", "operationId": "user_organization_create", "summary": ":param request: Django request", "tags": ["micro-service"]}, "get": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "required": true}, {"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "responses": {"200": {"description": ""}}, "description": "Organization Viewset", "operationId": "user_organization_list", "summary": "Organization Viewset", "tags": ["micro-service"]}}, "/micro-service/user/{owner}/organization/{token}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "required": true}, {"in": "path", "type": "string", "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "required": true}], "responses": {"204": {"description": ""}}, "description": "Organization Viewset", "operationId": "user_organization_delete", "summary": "Organization Viewset", "tags": ["micro-service"]}, "get": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "required": true}, {"in": "path", "type": "string", "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "required": true}], "responses": {"200": {"description": ""}}, "description": "Organization Viewset", "operationId": "user_organization_read", "summary": "Organization Viewset", "tags": ["micro-service"]}, "patch": {"consumes": ["application/json"], "responses": {"200": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "required": true}, {"in": "path", "type": "string", "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"avatar": {"type": "string", "description": ""}, "name": {"type": "string", "description": "Required. 64 characters or fewer."}, "owner": {"type": "string", "description": "User uuid, this token will identify who is the owner of respective Organization."}}}}], "description": "Organization Viewset", "operationId": "user_organization_partial_update", "summary": "Organization Viewset", "tags": ["micro-service"]}}, "/micro-service/user/{owner}/organization/{organization}/member/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "", "required": true}, {"in": "path", "type": "string", "name": "uuid", "description": "Member uuid, this token will uniquely identify Member.", "required": true}, {"in": "path", "type": "string", "name": "organization", "description": "Member Organization.", "required": true}], "operationId": "user_organization_member_delete", "tags": ["micro-service"], "responses": {"204": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "", "required": true}, {"in": "path", "type": "string", "name": "uuid", "description": "Member uuid, this token will uniquely identify Member.", "required": true}, {"in": "path", "type": "string", "name": "organization", "description": "Member Organization.", "required": true}], "operationId": "user_organization_member_read", "tags": ["micro-service"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "owner", "description": "", "required": true}, {"in": "path", "type": "string", "name": "uuid", "description": "Member uuid, this token will uniquely identify Member.", "required": true}, {"in": "path", "type": "string", "name": "organization", "description": "Member Organization.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"user": {"type": "string", "description": "User uuid, this uid will identify associated User with respective Member."}, "type": {"type": "string", "description": "Member type, for internal user only"}, "name": {"type": "string", "description": "Required. 64 characters or fewer."}, "organization": {"type": "string", "description": "Member Organization."}}}}], "operationId": "user_organization_member_partial_update", "tags": ["micro-service"], "responses": {"200": {"description": ""}}}}, "/micro-service/member/{member_user_uuid}/organization/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "member_user_uuid", "description": "", "required": true}, {"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "responses": {"200": {"description": ""}}, "description": "This viewset will be used to list user memberships.", "operationId": "member_organization_list", "summary": "This viewset will be used to list user memberships.", "tags": ["micro-service"]}}, "/micro-service/user/{owner}/organization/{token}/services/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "required": true}, {"in": "path", "type": "string", "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "required": true}], "responses": {"200": {"description": ""}}, "description": ":param request: Django request\n:param owner: owner/user uuid\n:param token: organization uuid\n:return: Organization services", "operationId": "user_organization_get_organization_service", "summary": ":param request: Django request", "tags": ["micro-service"]}}}}, "is_public": false, "created_at": "2017-04-27T08:32:31.564Z", "modified_at": "2017-06-30T11:19:52.919Z"}}, {"model": "service_vault.servicevault", "pk": 44, "fields": {"name": "Keen", "description": "", "uuid": "8c214d55-bc40-471b-bd43-788c4c4f037b", "request_host": "keen.io", "upstream_url": "https://api.keen.io/3.0", "swagger_schema": {"swagger": "2.0", "info": {"title": "Picture Upload", "version": "0.1"}, "basePath": "/backend.php", "host": "pictshare.net", "schemes": ["https"], "paths": {"/": {"post": {"consumes": ["multipart/form-data"], "responses": {"405": {"description": "Invalid input"}}, "parameters": [{"in": "formData", "type": "file", "name": "postimage", "required": true}], "description": "Upload a picture to pictshare.net and get url of that pic in return", "operationId": "uploadPicture", "produces": ["application/json"], "summary": "Upload a picture"}}}}, "is_public": false, "created_at": "2017-05-04T09:26:05.180Z", "modified_at": "2017-06-22T11:07:53.027Z"}}, {"model": "service_vault.servicevault", "pk": 45, "fields": {"name": "NoApp Authentication", "description": "", "uuid": "7de21c98-a870-4b50-b954-392db4e50ba1", "request_host": "users.veris.in", "upstream_url": "http://local.veris.in:8016", "swagger_schema": {"swagger": "2.0", "info": {"title": "{project_name} API", "version": ""}, "host": "local.veris.in:8016", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/micro-service/user/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["password", "email", "avatar"], "type": "object", "properties": {"email": {"type": "string", "description": ""}, "avatar": {"type": "string", "description": ""}, "name": {"type": "string", "description": "Required. 100 characters or fewer."}, "password": {"type": "string", "description": ""}}}}], "description": "Register a new user", "operationId": "create", "summary": "Register a new user", "tags": ["user"]}}, "/micro-service/user/login/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["email", "password"], "type": "object", "properties": {"email": {"type": "string", "description": ""}, "password": {"type": "string", "description": ""}}}}], "description": "user authentication", "operationId": "user_login", "summary": "user authentication", "tags": ["user"]}}, "/micro-service/user/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "User uuid, this token will be used to link user in other services.", "required": true}], "responses": {"204": {"description": ""}}, "description": "Note : username Cannot be updated from here.", "operationId": "delete", "summary": "Note : username Cannot be updated from here.", "tags": ["user"]}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "User uuid, this token will be used to link user in other services.", "required": true}], "responses": {"200": {"description": ""}}, "description": "Note : username Cannot be updated from here.", "operationId": "read", "summary": "get user profile", "tags": ["user"]}, "patch": {"consumes": ["application/json"], "responses": {"200": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "User uuid, this token will be used to link user in other services.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"avatar": {"type": "string", "description": ""}, "name": {"type": "string", "description": "Required. 100 characters or fewer."}}}}], "description": "Note : username Cannot be updated from here.", "operationId": "partial_update", "summary": "Note : username Cannot be updated from here.", "tags": ["user"]}}}}, "is_public": false, "created_at": "2017-05-15T10:08:50.935Z", "modified_at": "2017-06-15T12:15:21.211Z"}}, {"model": "service_vault.servicevault", "pk": 47, "fields": {"name": "Workflow Managment", "description": "", "uuid": "662fb858-b9c8-46fb-abb8-dcfe07a5c13d", "request_host": "mistral.veris.in", "upstream_url": "http://192.168.1.96:8989", "swagger_schema": {"swagger": "2.0", "info": {"title": "Mistral API", "version": "2.0"}, "host": "0.0.0.0:8989", "definitions": {"workflow": {"properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}, "updated_at": {"type": "string", "description": ""}, "created_at": {"type": "string", "description": "description of workflow"}}}, "execution": {"properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "state_info": {"type": "string", "description": "an optional state information string"}, "workflow_name": {"type": "string", "description": "reference to workflow definition"}, "workflow_id": {"type": "string", "description": "reference to workflow ID"}, "state": {"type": "string", "description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "description": {"type": "string", "description": "description of workflow execution"}, "output": {"type": "object", "description": "output is a workflow output"}, "task_execution_id": {"type": "string", "description": "reference to the parent task execution"}}}}, "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/v2/workflows/{identifier}": {"delete": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Delete a mistral workflow", "operationId": "workflow_delete", "summary": "Delete a mistral workflow", "tags": ["workflows"]}, "put": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Update a mistral workflow", "operationId": "workflow_update", "summary": "Update a mistral workflow", "tags": ["workflows"]}, "get": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}], "description": "Retrieve a mistral workflow", "operationId": "workflow_get", "summary": "Retrieve a mistral workflow", "tags": ["workflows"]}}, "/v2/executions/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["input"], "type": "object", "properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "state_info": {"type": "string", "description": "an optional state information string"}, "workflow_name": {"type": "string", "description": "reference to workflow definition"}, "workflow_id": {"type": "string", "description": "reference to workflow ID"}, "state": {"type": "string", "description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "description": {"type": "string", "description": "description of workflow execution"}, "output": {"type": "object", "description": "output is a workflow output"}, "task_execution_id": {"type": "string", "description": "reference to the parent task execution"}}}}], "description": "Execute a mistral workflow or action", "operationId": "execution_create", "summary": "Execute a mistral workflow or action", "tags": ["executions"]}}, "/v2/workflows/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name", "input"], "type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Create a mistral workflow", "operationId": "workflow_create", "summary": "Create a mistral workflow", "tags": ["workflows"]}, "get": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "query", "type": "string", "name": "marker", "required": false}, {"in": "query", "type": "string", "name": "limit", "required": false}, {"in": "query", "type": "string", "name": "fields", "required": false}, {"in": "query", "type": "string", "name": "name", "required": false}, {"in": "query", "type": "string", "name": "definition", "required": false}, {"in": "query", "type": "string", "name": "project_id", "required": false}, {"in": "query", "type": "string", "name": "tags", "required": false}], "description": "List mistral workflows", "operationId": "workflow_create", "summary": "List mistral workflows", "tags": ["workflows"]}}}}, "is_public": false, "created_at": "2017-05-22T09:36:27.019Z", "modified_at": "2017-06-15T12:15:03.658Z"}}, {"model": "service_vault.servicevault", "pk": 48, "fields": {"name": "NoApp KeyValStore", "description": "", "uuid": "93ad787a-3232-48b5-af10-e5f76d752377", "request_host": "redis.veris.in", "upstream_url": "http://192.168.1.96:8000", "swagger_schema": {"swagger": "2.0", "info": {"title": "KeyValue Store", "version": ""}, "host": "localhost:8000", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/api/v1/sessions/{uuid}/write/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "header", "type": "string", "name": "Key", "required": true}], "operationId": "sessions_write", "tags": ["sessions"], "responses": {"201": {"description": ""}}}}, "/api/v1/sessions/{uuid}/read/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "header", "type": "string", "name": "Key", "required": true}], "operationId": "sessions_read", "tags": ["sessions"], "responses": {"201": {"description": ""}}}}}}, "is_public": false, "created_at": "2017-05-24T14:17:16.551Z", "modified_at": "2017-06-15T12:14:43.048Z"}}, {"model": "service_vault.servicevault", "pk": 49, "fields": {"name": "No App Notifications", "description": "Send notification to the users using SMS, Email or Push.", "uuid": "5dc46cd2-784f-42f5-a730-56048662b45f", "request_host": "notify.veris.in", "upstream_url": "http://local.veris.in:8011", "swagger_schema": {"swagger": "2.0", "info": {"title": "V-Notification API", "version": ""}, "host": "local.veris.in:8011", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/micro-service/notification/email/gmail/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["to", "subject", "body", "provider", "username", "password"], "type": "object", "properties": {"body": {"type": "string", "description": ""}, "username": {"type": "string", "description": "Gmail Account Username"}, "from_email": {"type": "string", "description": ""}, "password": {"type": "string", "description": "Gmail Account Password"}, "to": {"type": "string", "description": ""}, "subject": {"type": "string", "description": ""}, "provider": {"type": "string", "description": ""}, "notification_type": {"type": "string", "description": ""}, "html_message": {"type": "boolean", "description": ""}}}}], "description": ":param request:\n:return:", "operationId": "gmail", "summary": ":param request:", "tags": ["email"]}}, "/micro-service/notification/sms/twilio/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["to", "body", "provider", "account_sid", "auth_token"], "type": "object", "properties": {"auth_token": {"type": "string", "description": "Twilio Auth Token."}, "body": {"type": "string", "description": ""}, "from_": {"type": "string", "description": ""}, "to": {"type": "string", "description": ""}, "account_sid": {"type": "string", "description": "Twilio Account SID."}, "provider": {"type": "string", "description": ""}, "notification_type": {"type": "string", "description": ""}}}}], "description": ":param request:\n:return:", "operationId": "send_sms", "summary": ":param request:", "tags": ["sms"]}}, "/micro-service/notification/email/sendgrid/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["to", "subject", "body", "provider", "sendgrid_api_key"], "type": "object", "properties": {"sendgrid_api_key": {"type": "string", "description": "SendGrid API key."}, "body": {"type": "string", "description": ""}, "from_email": {"type": "string", "description": ""}, "to": {"type": "string", "description": ""}, "subject": {"type": "string", "description": ""}, "provider": {"type": "string", "description": ""}, "notification_type": {"type": "string", "description": ""}, "html_message": {"type": "boolean", "description": ""}}}}], "description": ":param request:\n:return:", "operationId": "sendgrid", "summary": ":param request:", "tags": ["email"]}}}}, "is_public": false, "created_at": "2017-05-25T14:05:43.794Z", "modified_at": "2017-06-15T12:14:09.608Z"}}, {"model": "service_vault.servicevault", "pk": 50, "fields": {"name": "Multi Factor Authentication", "description": "", "uuid": "6d4f96f3-6b44-489e-80dc-b4f18bab8300", "request_host": "mfa.veris.in", "upstream_url": "http://local.veris.in:8017", "swagger_schema": {"swagger": "2.0", "info": {"title": "Rest PyOTP APIs", "version": ""}, "host": "local.veris.in:8017", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/generate-otp/hotp/provision-uri/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["count", "name", "issuer_name"], "type": "object", "properties": {"name": {"type": "string", "description": "name of the account"}, "issuer_name": {"type": "string", "description": "name of the OTP issuer"}, "count": {"type": "integer", "description": "OTP Counter."}, "initial_count": {"type": "string", "description": "starting counter value, defaults to 0"}}}}], "operationId": "hotp_generate_hotp_provision_uri", "tags": ["generate-otp"], "responses": {"201": {"description": ""}}}}, "/generate-otp/": {"post": {"consumes": ["application/json"], "operationId": "generate_otp", "parameters": [{"in": "body", "name": "data", "schema": {"required": ["time", "unique_identifier"], "type": "object", "properties": {"time": {"type": "integer", "description": "OTP Validity-Time (in seconds)."}, "unique_identifier": {"type": "string", "description": ""}}}}], "responses": {"201": {"description": ""}}}}, "/generate-otp/totp/provision-uri/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["time", "name", "issuer_name"], "type": "object", "properties": {"time": {"type": "integer", "description": "OTP Validity-Time (in seconds)."}, "name": {"type": "string", "description": "name of the account"}, "issuer_name": {"type": "string", "description": "name of the OTP issuer"}}}}], "operationId": "totp_generate_totp_provision_uri", "tags": ["generate-otp"], "responses": {"201": {"description": ""}}}}, "/generate-otp/totp/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["time"], "type": "object", "properties": {"time": {"type": "integer", "description": "OTP Validity-Time (in seconds)."}}}}], "operationId": "generate_totp", "tags": ["generate-otp"], "responses": {"201": {"description": ""}}}}, "/verify-otp/{otp_type})/{uuid}/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "otp_type", "description": "", "required": true}, {"in": "path", "type": "string", "name": "uuid", "description": "Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["otp"], "type": "object", "properties": {"otp": {"type": "string", "description": ""}}}}], "description": ":param request: Django request\n:param otp_type: otp_type  [hotp/totp]\n:param uuid: OTP instance UUID\n:return: 200_ok OR 400_bad_request", "operationId": "verify_otp", "summary": ":param request: Django request"}}, "/verify-otp/": {"post": {"parameters": [], "description": ":param request: Django request\n:return: 200_ok OR 400_bad_request", "operationId": "verify", "responses": {"201": {"description": ""}}, "summary": ":param request: Django request"}}, "/generate-otp/hotp/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["count"], "type": "object", "properties": {"count": {"type": "integer", "description": "OTP Counter."}}}}], "operationId": "generate_hotp", "tags": ["generate-otp"], "responses": {"201": {"description": ""}}}}}}, "is_public": false, "created_at": "2017-05-26T11:29:23.773Z", "modified_at": "2017-06-15T12:13:18.239Z"}}, {"model": "service_vault.servicevault", "pk": 51, "fields": {"name": "NoApp Marketplace", "description": "Service to manage both the Internal & External Services", "uuid": "6ee1ddc7-ab7e-4243-a7be-b8285aee5514", "request_host": "marketplace.veris.in", "upstream_url": "http://local.veris.in:8014", "swagger_schema": {"swagger": "2.0", "info": {"title": "{project_name} API", "version": ""}, "host": "local.veris.in:8014", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/micro-service/service-vault/service/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name", "request_host", "upstream_url", "swagger_schema"], "type": "object", "properties": {"swagger_schema": {"type": "string", "description": ""}, "request_host": {"type": "string", "description": "Resource Host, to be passed to kong"}, "name": {"type": "string", "description": "Required. 30 characters or fewer."}, "description": {"type": "string", "description": "Service Description"}, "upstream_url": {"type": "string", "description": "Required. 200 characters or fewer."}, "is_public": {"type": "boolean", "description": "If checked , this service will be publicly available for use."}}}}], "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "operationId": "service_create", "summary": "Service Vault Viewset, every resource http request handles by this class", "tags": ["service"]}, "get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "responses": {"200": {"description": ""}}, "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "operationId": "service_list", "summary": "Service Vault Viewset, every resource http request handles by this class", "tags": ["service"]}}, "/micro-service/service-vault/service/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "required": true}], "responses": {"204": {"description": ""}}, "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "operationId": "service_delete", "summary": "Service Vault Viewset, every resource http request handles by this class", "tags": ["service"]}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "required": true}], "responses": {"200": {"description": ""}}, "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "operationId": "service_read", "summary": "Service Vault Viewset, every resource http request handles by this class", "tags": ["service"]}, "patch": {"consumes": ["application/json"], "responses": {"200": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"swagger_schema": {"type": "string", "description": ""}, "request_host": {"type": "string", "description": "Resource Host, to be passed to kong"}, "name": {"type": "string", "description": "Required. 30 characters or fewer."}, "description": {"type": "string", "description": "Service Description"}, "upstream_url": {"type": "string", "description": "Required. 200 characters or fewer."}, "is_public": {"type": "boolean", "description": "If checked , this service will be publicly available for use."}}}}], "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "operationId": "service_partial_update", "summary": "Service Vault Viewset, every resource http request handles by this class", "tags": ["service"]}}, "/micro-service/service-vault/service/{uuid}/apis/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "required": true}], "responses": {"200": {"description": ""}}, "description": ":param request: Django request param\n:param uuid: service vault uuid\n:return: Service APIS or operations in swagger", "operationId": "service_get_service_apis_from_kong", "summary": ":param request: Django request param", "tags": ["service"]}}, "/micro-service/service-vault/proxy-kong/{path}": {"post": {"parameters": [{"in": "path", "type": "string", "name": "path", "description": "", "required": true}], "responses": {"201": {"description": ""}}, "description": "Proxy To kong", "operationId": "proxy-kong_create", "summary": "Proxy To kong", "tags": ["proxy-kong"]}, "delete": {"parameters": [{"in": "path", "type": "string", "name": "path", "description": "", "required": true}], "responses": {"204": {"description": ""}}, "description": "Proxy To kong", "operationId": "proxy-kong_delete", "summary": "Proxy To kong", "tags": ["proxy-kong"]}, "put": {"parameters": [{"in": "path", "type": "string", "name": "path", "description": "", "required": true}], "responses": {"200": {"description": ""}}, "description": "Proxy To kong", "operationId": "proxy-kong_update", "summary": "Proxy To kong", "tags": ["proxy-kong"]}, "get": {"parameters": [{"in": "path", "type": "string", "name": "path", "description": "", "required": true}], "responses": {"200": {"description": ""}}, "description": "Proxy To kong", "operationId": "proxy-kong_read", "summary": "Proxy To kong", "tags": ["proxy-kong"]}, "patch": {"parameters": [{"in": "path", "type": "string", "name": "path", "description": "", "required": true}], "responses": {"200": {"description": ""}}, "description": "Proxy To kong", "operationId": "proxy-kong_partial_update", "summary": "Proxy To kong", "tags": ["proxy-kong"]}}}}, "is_public": false, "created_at": "2017-05-31T12:54:41.912Z", "modified_at": "2017-06-15T12:16:42.129Z"}}, {"model": "service_vault.servicevault", "pk": 53, "fields": {"name": "NoApp Templates", "description": "Service that manages templates required across platforms", "uuid": "f103651f-2132-403f-be48-a86a1c38559c", "request_host": "templates.veris.in", "upstream_url": "http://192.168.10.222:8018", "swagger_schema": {"swagger": "2.0", "info": {"title": "Template Service API", "version": ""}, "host": "local.veris.in:8018", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/micro-service/templates/{uuid}/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "Non-editable, to be generated by system itself.", "required": true}], "responses": {"200": {"description": ""}}, "description": "Template Viewset, every authorization http request handles by this class", "operationId": "read", "summary": "Template Viewset, every authorization http request handles by this class", "tags": ["templates"]}, "patch": {"consumes": ["application/json"], "responses": {"200": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"description": {"type": "string", "description": "Template Description."}, "name": {"type": "string", "description": "Template Name."}, "schema": {"type": "string", "description": ""}}}}], "description": "Template Viewset, every authorization http request handles by this class", "operationId": "update", "summary": "Template Viewset, every authorization http request handles by this class", "tags": ["templates"]}}, "/micro-service/templates/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name", "description", "schema"], "type": "object", "properties": {"description": {"type": "string", "description": "Template Description."}, "name": {"type": "string", "description": "Template Name."}, "schema": {"type": "string", "description": ""}}}}], "description": "Template Viewset, every authorization http request handles by this class", "operationId": "create", "summary": "Template Viewset, every authorization http request handles by this class", "tags": ["templates"]}, "get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "responses": {"200": {"description": ""}}, "description": "Template Viewset, every authorization http request handles by this class", "operationId": "list", "summary": "Template Viewset, every authorization http request handles by this class", "tags": ["templates"]}}}}, "is_public": false, "created_at": "2017-06-01T06:50:03.844Z", "modified_at": "2017-06-15T12:16:20.327Z"}}, {"model": "service_vault.servicevault", "pk": 54, "fields": {"name": "NoApp Applications", "description": "Service that manages Apps, Widgets & Processes", "uuid": "9d6fe4a6-85b8-45b7-93eb-b9a77787a72b", "request_host": "apis.veris.in", "upstream_url": "http://172.18.0.1:8000", "swagger_schema": {"swagger": "2.0", "info": {"title": "Veris API", "version": ""}, "host": "localhost:8000", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/api/v1/sessions/{uuid}/write/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_write", "tags": ["sessions"], "responses": {"201": {"description": ""}}}}, "/api/v1/sessions/{uuid}/history/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}], "responses": {"200": {"description": ""}}, "description": "gets the history of a particular instance\n\n:param request:\n:param pk:\n:return:", "operationId": "sessions_history", "summary": "gets the history of a particular instance", "tags": ["sessions"]}}, "/api/v1/version/{id}/": {"get": {"parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this version.", "required": true}], "responses": {"200": {"description": ""}}, "description": "List all the versions of all the objects in the database.", "operationId": "version_read", "summary": "List all the versions of all the objects in the database.", "tags": ["version"]}}, "/api/v1/processes/{uuid}/execute/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["schema", "name"], "type": "object", "properties": {"type": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "schema": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}}}}], "operationId": "processes_execute_create", "tags": ["processes"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "processes_execute_read", "tags": ["processes"], "responses": {"200": {"description": ""}}}}, "/api/v1/feedbacks/{id}/": {"delete": {"parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}], "operationId": "feedbacks_delete", "tags": ["feedbacks"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["app"], "type": "object", "properties": {"rating": {"type": "integer", "description": ""}, "comment": {"type": "string", "description": ""}, "app": {"type": "string", "description": ""}}}}], "operationId": "feedbacks_update", "tags": ["feedbacks"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}], "operationId": "feedbacks_read", "tags": ["feedbacks"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"rating": {"type": "integer", "description": ""}, "comment": {"type": "string", "description": ""}, "app": {"type": "string", "description": ""}}}}], "operationId": "feedbacks_partial_update", "tags": ["feedbacks"], "responses": {"200": {"description": ""}}}}, "/api/v1/processes/{uuid}/server/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "processes_server", "tags": ["processes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/widgets/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "runtimes_widgets_list", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/widgets/{widget_uuid})/{action})/": {"post": {"parameters": [{"in": "path", "type": "string", "name": "widget_uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "action", "description": "", "required": true}], "operationId": "widgets_create", "tags": ["widgets"], "responses": {"201": {"description": ""}}}}, "/api/v1/sessions/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}], "operationId": "sessions_delete", "tags": ["sessions"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_update", "tags": ["sessions"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_partial_update", "tags": ["sessions"], "responses": {"200": {"description": ""}}}}, "/api/v1/processes/{uuid}/schema/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "processes_schema", "tags": ["processes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/sessions/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_create", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "runtimes_sessions_list", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/sessions/{uuid}/cancel/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_cancel", "tags": ["sessions"], "responses": {"201": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}], "operationId": "runtimes_sessions_delete", "tags": ["runtimes"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_partial_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/widgets/system/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}], "operationId": "runtimes_widgets_system", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/processes/{uuid}/client/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "processes_client", "tags": ["processes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/success/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_success", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/read/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_read", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}}, "/api/v1/revision/{id}/": {"get": {"parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this revision.", "required": true}], "responses": {"200": {"description": ""}}, "description": "ViewSet for ``Revision`` model.", "operationId": "revision_read", "summary": "ViewSet for ``Revision`` model.", "tags": ["revision"]}}, "/api/v1/widgets/": {"get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "widgets_list", "tags": ["widgets"], "responses": {"200": {"description": ""}}}}, "/api/v1/version/": {"get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "responses": {"200": {"description": ""}}, "description": "List all the versions of all the objects in the database.", "operationId": "version_list", "summary": "List all the versions of all the objects in the database.", "tags": ["version"]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/history/": {"get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}], "responses": {"200": {"description": ""}}, "description": "gets the history of a particular instance\n\n:param request:\n:param pk:\n:return:", "operationId": "runtimes_sessions_history", "summary": "gets the history of a particular instance", "tags": ["runtimes"]}}, "/api/v1/runtimes/{app_uuid}/feedbacks/{id}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "app_uuid", "description": "", "required": true}, {"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}], "operationId": "runtimes_feedbacks_delete", "tags": ["runtimes"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "app_uuid", "description": "", "required": true}, {"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["app"], "type": "object", "properties": {"rating": {"type": "integer", "description": ""}, "comment": {"type": "string", "description": ""}, "app": {"type": "string", "description": ""}}}}], "operationId": "runtimes_feedbacks_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "app_uuid", "description": "", "required": true}, {"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}], "operationId": "runtimes_feedbacks_read", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "app_uuid", "description": "", "required": true}, {"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this feedback.", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"rating": {"type": "integer", "description": ""}, "comment": {"type": "string", "description": ""}, "app": {"type": "string", "description": ""}}}}], "operationId": "runtimes_feedbacks_partial_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/sessions/{uuid}/success/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_success", "tags": ["sessions"], "responses": {"201": {"description": ""}}}}, "/api/v1/runtimes/{uuid})/widgets/{widget_uuid})/{action})/": {"post": {"parameters": [{"in": "path", "type": "string", "name": "widget_uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "action", "description": "", "required": true}], "operationId": "runtimes_widgets_create", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}}, "/api/v1/runtimes/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "runtimes_delete", "tags": ["runtimes"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"logo": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "widget_locker_token": {"type": "string", "description": "Token of Widget Locker to which will be loaded when a runtime is called."}, "widget_locker_uuid": {"type": "string", "description": ""}}}}], "operationId": "runtimes_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "runtimes_read", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"logo": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "widget_locker_token": {"type": "string", "description": "Token of Widget Locker to which will be loaded when a runtime is called."}, "widget_locker_uuid": {"type": "string", "description": ""}}}}], "operationId": "runtimes_partial_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/processes/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["schema", "name"], "type": "object", "properties": {"type": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "schema": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}}}}], "operationId": "processes_create", "tags": ["processes"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "processes_list", "tags": ["processes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"logo": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "widget_locker_token": {"type": "string", "description": "Token of Widget Locker to which will be loaded when a runtime is called."}, "widget_locker_uuid": {"type": "string", "description": ""}}}}], "operationId": "runtimes_create", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "runtimes_list", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/widgets/system/": {"get": {"parameters": [], "operationId": "widgets_system", "tags": ["widgets"], "responses": {"200": {"description": ""}}}}, "/api/v1/widgets/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "widgets_delete", "tags": ["widgets"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"data": {"type": "string", "description": "Widget Data, the data to be filled by admin, using admin widget designed by developer"}, "process_locker_uuid": {"type": "string", "description": ""}, "process_locker_token": {"type": "string", "description": "Token of Process Locker to which will be loaded when a Widget is called."}, "description": {"type": "string", "description": ""}, "template": {"type": "string", "description": "Widget Template, the list of components with their layout & styles"}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "index": {"type": "integer", "description": ""}}}}], "operationId": "widgets_update", "tags": ["widgets"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "widgets_read", "tags": ["widgets"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"data": {"type": "string", "description": "Widget Data, the data to be filled by admin, using admin widget designed by developer"}, "process_locker_uuid": {"type": "string", "description": ""}, "process_locker_token": {"type": "string", "description": "Token of Process Locker to which will be loaded when a Widget is called."}, "description": {"type": "string", "description": ""}, "template": {"type": "string", "description": "Widget Template, the list of components with their layout & styles"}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "index": {"type": "integer", "description": ""}}}}], "operationId": "widgets_partial_update", "tags": ["widgets"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/widgets/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}], "operationId": "runtimes_widgets_delete", "tags": ["runtimes"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["name"], "type": "object", "properties": {"data": {"type": "string", "description": "Widget Data, the data to be filled by admin, using admin widget designed by developer"}, "process_locker_uuid": {"type": "string", "description": ""}, "process_locker_token": {"type": "string", "description": "Token of Process Locker to which will be loaded when a Widget is called."}, "description": {"type": "string", "description": ""}, "template": {"type": "string", "description": "Widget Template, the list of components with their layout & styles"}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "index": {"type": "integer", "description": ""}}}}], "operationId": "runtimes_widgets_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}], "operationId": "runtimes_widgets_read", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"data": {"type": "string", "description": "Widget Data, the data to be filled by admin, using admin widget designed by developer"}, "process_locker_uuid": {"type": "string", "description": ""}, "process_locker_token": {"type": "string", "description": "Token of Process Locker to which will be loaded when a Widget is called."}, "description": {"type": "string", "description": ""}, "template": {"type": "string", "description": "Widget Template, the list of components with their layout & styles"}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "index": {"type": "integer", "description": ""}}}}], "operationId": "runtimes_widgets_partial_update", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/cancel/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_cancel", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}}, "/api/v1/processes/{uuid}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "processes_delete", "tags": ["processes"], "responses": {"204": {"description": ""}}}, "put": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["schema", "name"], "type": "object", "properties": {"type": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "schema": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}}}}], "operationId": "processes_update", "tags": ["processes"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}], "operationId": "processes_read", "tags": ["processes"], "responses": {"200": {"description": ""}}}, "patch": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"type": {"type": "string", "description": ""}, "name": {"type": "string", "description": ""}, "uuid": {"type": "string", "description": ""}, "schema": {"type": "string", "description": ""}, "description": {"type": "string", "description": ""}}}}], "operationId": "processes_partial_update", "tags": ["processes"], "responses": {"200": {"description": ""}}}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/write/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "path", "type": "string", "name": "runtime_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "runtimes_sessions_write", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}}, "/api/v1/runtimes/{app_uuid}/feedbacks/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "app_uuid", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["app"], "type": "object", "properties": {"rating": {"type": "integer", "description": ""}, "comment": {"type": "string", "description": ""}, "app": {"type": "string", "description": ""}}}}], "operationId": "runtimes_feedbacks_create", "tags": ["runtimes"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "app_uuid", "description": "", "required": true}, {"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "runtimes_feedbacks_list", "tags": ["runtimes"], "responses": {"200": {"description": ""}}}}, "/api/v1/sessions/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_create", "tags": ["sessions"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "sessions_list", "tags": ["sessions"], "responses": {"200": {"description": ""}}}}, "/api/v1/revision/": {"get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "responses": {"200": {"description": ""}}, "description": "ViewSet for ``Revision`` model.", "operationId": "revision_list", "summary": "ViewSet for ``Revision`` model.", "tags": ["revision"]}}, "/api/v1/feedbacks/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "body", "name": "data", "schema": {"required": ["app"], "type": "object", "properties": {"rating": {"type": "integer", "description": ""}, "comment": {"type": "string", "description": ""}, "app": {"type": "string", "description": ""}}}}], "operationId": "feedbacks_create", "tags": ["feedbacks"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "query", "type": "integer", "name": "limit", "description": "Number of results to return per page.", "required": false}, {"in": "query", "type": "integer", "name": "offset", "description": "The initial index from which to return the results.", "required": false}, {"in": "query", "type": "string", "name": "ordering", "description": "Which field to use when ordering the results.", "required": false}, {"in": "query", "type": "string", "name": "search", "description": "A search term.", "required": false}], "operationId": "feedbacks_list", "tags": ["feedbacks"], "responses": {"200": {"description": ""}}}}, "/api/v1/sessions/{uuid}/read/": {"post": {"consumes": ["application/json"], "parameters": [{"in": "path", "type": "string", "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["runtime"], "type": "object", "properties": {"runtime": {"type": "string", "description": ""}, "data": {"type": "string", "description": ""}}}}], "operationId": "sessions_read", "tags": ["sessions"], "responses": {"201": {"description": ""}}}}, "/api/v1/version/{id}/revert/": {"get": {"parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this version.", "required": true}], "responses": {"200": {"description": ""}}, "description": "revert to the version specified\n\n:param request:\n:param pk:\n:return:", "operationId": "version_revert", "summary": "revert to the version specified", "tags": ["version"]}}}}, "is_public": false, "created_at": "2017-06-01T08:47:03.526Z", "modified_at": "2017-06-30T07:41:35.390Z"}}, {"model": "service_vault.servicevault", "pk": 55, "fields": {"name": "NoApp Authorization", "description": "Authorization Server", "uuid": "31ddde15-4b88-41ac-a5fc-af9841cc0690", "request_host": "am.veris.in", "upstream_url": "http://192.168.10.222:8013", "swagger_schema": {"swagger": "2.0", "info": {"title": "Authorization (AM SerVer)", "version": ""}, "host": "local.veris.in:8013", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/micro-service/am/policy/{source_pk}/{perm_pk}/": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "perm_pk", "description": "", "required": true}, {"in": "path", "type": "string", "name": "source_pk", "description": "", "required": true}], "responses": {"204": {"description": ""}}, "description": "Policy Permission set will be deleted here\n\n:param request:\n:param source_pk: policy pk\n:param perm_pk: policy permission pk\n:return: permission set", "operationId": "delete", "summary": "Policy Permission set will be deleted here", "tags": ["policy"]}, "patch": {"consumes": ["application/json"], "responses": {"200": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "perm_pk", "description": "", "required": true}, {"in": "path", "type": "string", "name": "source_pk", "description": "", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"source_permission_set": {"type": "array", "description": "", "items": {"type": "string"}}, "source": {"type": "string", "description": ""}}}}], "description": "Policy Permission set will be updated here\n\n:param request:\n:param source_pk: policy pk\n:param perm_pk: policy permission pk\n:return: permission set", "operationId": "partial_update", "summary": "Policy Permission set will be updated here", "tags": ["policy"]}}, "/micro-service/am/policy/{id}/": {"get": {"parameters": [{"in": "path", "type": "integer", "name": "id", "description": "A unique integer value identifying this Authorization Policy.", "required": true}], "responses": {"200": {"description": ""}}, "description": "Authorization Viewset, every authorization http request handles by this class", "operationId": "read", "summary": "Authorization Viewset, every authorization http request handles by this class", "tags": ["policy"]}}, "/micro-service/am/policy/validate/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["source", "source_permission_set"], "type": "object", "properties": {"source_permission_set": {"type": "array", "description": "", "items": {"type": "string"}}, "source": {"type": "string", "description": ""}}}}], "description": "check authorization w.r.t target", "operationId": "validate_policy_permission", "summary": "check authorization w.r.t target", "tags": ["policy"]}}, "/micro-service/am/policy/list/": {"get": {"parameters": [], "responses": {"200": {"description": ""}}, "description": ":param source: source\n:return: source resources.", "operationId": "list_source_policy", "summary": ":param source: source", "tags": ["policy"]}}, "/micro-service/am/policy/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["source", "source_permission_set"], "type": "object", "properties": {"source_permission_set": {"type": "array", "description": "", "items": {"type": "string"}}, "source": {"type": "string", "description": ""}}}}], "description": "Authorization Viewset, every authorization http request handles by this class", "operationId": "create", "summary": "Authorization Viewset, every authorization http request handles by this class", "tags": ["policy"]}}}}, "is_public": false, "created_at": "2017-06-05T07:08:57.895Z", "modified_at": "2017-06-15T12:08:00.306Z"}}, {"model": "service_vault.servicevault", "pk": 58, "fields": {"name": "NoApp Media", "description": "Media Storage Service", "uuid": "afca2963-c483-4967-a71b-33cc7687369c", "request_host": "media.noapp.mobi", "upstream_url": "https://pictshare.net", "swagger_schema": {"swagger": "2.0", "info": {"title": "V3 Media", "version": "1.0"}, "host": "media.noapp.mobi", "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http", "https"], "paths": {"/backend.php": {"post": {"consumes": ["multipart/form-data"], "responses": {"200": {"description": ""}}, "parameters": [{"in": "formData", "type": "file", "name": "postimage", "description": "image to upload"}], "description": "", "operationId": "image_upload", "summary": ""}}}}, "is_public": false, "created_at": "2017-06-08T09:44:25.018Z", "modified_at": "2017-06-15T12:07:23.600Z"}}, {"model": "service_vault.servicevault", "pk": 59, "fields": {"name": "NoApp Workflows", "description": "Manage workflows", "uuid": "f3a94037-ad82-4f3c-9237-eb71c98aff6e", "request_host": "workflows.noapp.mobi", "upstream_url": "http://workflows.noapp.mobi", "swagger_schema": {"swagger": "2.0", "info": {"title": "Mistral API", "version": "2.0"}, "host": "0.0.0.0:8989", "definitions": {"workflow": {"properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}, "updated_at": {"type": "string", "description": ""}, "created_at": {"type": "string", "description": "description of workflow"}}}, "execution": {"properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "state_info": {"type": "string", "description": "an optional state information string"}, "workflow_name": {"type": "string", "description": "reference to workflow definition"}, "workflow_id": {"type": "string", "description": "reference to workflow ID"}, "state": {"type": "string", "description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "description": {"type": "string", "description": "description of workflow execution"}, "output": {"type": "object", "description": "output is a workflow output"}, "task_execution_id": {"type": "string", "description": "reference to the parent task execution"}}}}, "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/v2/workflows/{identifier}": {"delete": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Delete a mistral workflow", "operationId": "workflow_delete", "summary": "Delete a mistral workflow", "tags": ["workflows"]}, "put": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Update a mistral workflow", "operationId": "workflow_update", "summary": "Update a mistral workflow", "tags": ["workflows"]}, "get": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}], "description": "Retrieve a mistral workflow", "operationId": "workflow_get", "summary": "Retrieve a mistral workflow", "tags": ["workflows"]}}, "/v2/executions/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["input"], "type": "object", "properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "state_info": {"type": "string", "description": "an optional state information string"}, "workflow_name": {"type": "string", "description": "reference to workflow definition"}, "workflow_id": {"type": "string", "description": "reference to workflow ID"}, "state": {"type": "string", "description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "description": {"type": "string", "description": "description of workflow execution"}, "output": {"type": "object", "description": "output is a workflow output"}, "task_execution_id": {"type": "string", "description": "reference to the parent task execution"}}}}], "description": "Execute a mistral workflow or action", "operationId": "execution_create", "summary": "Execute a mistral workflow or action", "tags": ["executions"]}}, "/v2/workflows/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name", "input"], "type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Create a mistral workflow", "operationId": "workflow_create", "summary": "Create a mistral workflow", "tags": ["workflows"]}, "get": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "query", "type": "string", "name": "marker", "required": false}, {"in": "query", "type": "string", "name": "limit", "required": false}, {"in": "query", "type": "string", "name": "fields", "required": false}, {"in": "query", "type": "string", "name": "name", "required": false}, {"in": "query", "type": "string", "name": "definition", "required": false}, {"in": "query", "type": "string", "name": "project_id", "required": false}, {"in": "query", "type": "string", "name": "tags", "required": false}], "description": "List mistral workflows", "operationId": "workflow_create", "summary": "List mistral workflows", "tags": ["workflows"]}}}}, "is_public": false, "created_at": "2017-06-15T12:53:34.686Z", "modified_at": "2017-06-15T12:53:34.686Z"}}, {"model": "service_vault.servicevault", "pk": 60, "fields": {"name": "Workflows", "description": "handle workflows", "uuid": "813bf08a-04ef-4d04-b284-83f9f2961c7a", "request_host": "wf.noapp.mobi", "upstream_url": "http://workflows.noapp.mobi", "swagger_schema": {"swagger": "2.0", "info": {"title": "Mistral API", "version": "2.0"}, "host": "0.0.0.0:8989", "definitions": {"workflow": {"properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}, "updated_at": {"type": "string", "description": ""}, "created_at": {"type": "string", "description": "description of workflow"}}}, "execution": {"properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "state_info": {"type": "string", "description": "an optional state information string"}, "workflow_name": {"type": "string", "description": "reference to workflow definition"}, "workflow_id": {"type": "string", "description": "reference to workflow ID"}, "state": {"type": "string", "description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "description": {"type": "string", "description": "description of workflow execution"}, "output": {"type": "object", "description": "output is a workflow output"}, "task_execution_id": {"type": "string", "description": "reference to the parent task execution"}}}}, "securityDefinitions": {"basic": {"type": "basic"}}, "schemes": ["http"], "paths": {"/v2/workflows/{identifier}": {"delete": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Delete a mistral workflow", "operationId": "workflow_delete", "summary": "Delete a mistral workflow", "tags": ["workflows"]}, "put": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}, {"in": "body", "name": "data", "schema": {"type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Update a mistral workflow", "operationId": "workflow_update", "summary": "Update a mistral workflow", "tags": ["workflows"]}, "get": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "path", "type": "string", "name": "identifier", "required": true}], "description": "Retrieve a mistral workflow", "operationId": "workflow_get", "summary": "Retrieve a mistral workflow", "tags": ["workflows"]}}, "/v2/executions/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["input"], "type": "object", "properties": {"id": {"type": "string", "description": "id is immutable and auto assigned"}, "state_info": {"type": "string", "description": "an optional state information string"}, "workflow_name": {"type": "string", "description": "reference to workflow definition"}, "workflow_id": {"type": "string", "description": "reference to workflow ID"}, "state": {"type": "string", "description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "description": {"type": "string", "description": "description of workflow execution"}, "output": {"type": "object", "description": "output is a workflow output"}, "task_execution_id": {"type": "string", "description": "reference to the parent task execution"}}}}], "description": "Execute a mistral workflow or action", "operationId": "execution_create", "summary": "Execute a mistral workflow or action", "tags": ["executions"]}}, "/v2/workflows/": {"post": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "body", "name": "data", "schema": {"required": ["name", "input"], "type": "object", "properties": {"project_id": {"type": "string", "description": "The same as the requester project_id or different if the scope is public."}, "scope": {"type": "string", "description": "state can be one of: private or public"}, "tags": {"type": "array", "description": "reference to workflow ID"}, "definition": {"type": "string", "description": "Workflow definition in Mistral v2 DSL"}, "input": {"type": "object", "description": "input is a JSON structure containing workflow input values"}, "name": {"type": "string", "description": "name of workflow"}}}}], "description": "Create a mistral workflow", "operationId": "workflow_create", "summary": "Create a mistral workflow", "tags": ["workflows"]}, "get": {"consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"in": "query", "type": "string", "name": "marker", "required": false}, {"in": "query", "type": "string", "name": "limit", "required": false}, {"in": "query", "type": "string", "name": "fields", "required": false}, {"in": "query", "type": "string", "name": "name", "required": false}, {"in": "query", "type": "string", "name": "definition", "required": false}, {"in": "query", "type": "string", "name": "project_id", "required": false}, {"in": "query", "type": "string", "name": "tags", "required": false}], "description": "List mistral workflows", "operationId": "workflow_create", "summary": "List mistral workflows", "tags": ["workflows"]}}}}, "is_public": false, "created_at": "2017-06-15T12:56:48.237Z", "modified_at": "2017-06-15T12:56:48.237Z"}}, {"model": "service_vault.servicevault", "pk": 61, "fields": {"name": "Google APIs", "description": "Google APIs - Calendar Resource, Events", "uuid": "e4c99c51-7c31-494a-be40-f8c9e180bb84", "request_host": "www.googleapis.com", "upstream_url": "https://www.googleapis.com", "swagger_schema": {"swagger": "2.0", "consumes": ["application/json", "application/x-www-form-urlencoded"], "info": {"description": "The APIs for handling calendar events & resources.", "title": "Google Calendar APIs", "version": "3.0.0"}, "host": "www.googleapis.com", "definitions": {"Event": {"type": "object", "properties": {"attendees": {"type": "array", "items": {"$ref": "#/definitions/Attendee"}}}, "description": ""}, "Date": {"type": "object", "properties": {"date": {"type": "string"}, "timeZone": {"type": "string"}, "dateTime": {"type": "string"}}, "description": ""}, "Attendee": {"required": ["email"], "type": "object", "properties": {"email": {"type": "string", "description": "The attendees email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322."}, "organizer": {"type": "boolean"}}, "description": "ok"}}, "securityDefinitions": {"resource_oauth": {"scopes": {"https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly": "read resource calendars", "https://www.googleapis.com/auth/admin.directory.resource.calendar": "manage resource calendars"}, "flow": "implicit", "type": "oauth2", "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth"}, "events_oauth": {"scopes": {"https://www.googleapis.com/auth/calendar": "read write calendar"}, "flow": "implicit", "type": "oauth2", "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth"}}, "produces": ["application/json", "application/x-www-form-urlencoded"], "schemes": ["https"], "paths": {"/calendar/v3/calendars/{calendarId}/events/{eventId}": {"delete": {"parameters": [{"in": "path", "type": "string", "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "required": true}, {"in": "path", "type": "string", "name": "eventId", "description": "Event identifier.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["attendees", "start", "end"], "type": "object", "properties": {"end": {"type": "object", "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "$ref": "#/definitions/Date"}, "attendees": {"type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users.", "items": {"$ref": "#/definitions/Attendee"}}, "start": {"type": "object", "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "$ref": "#/definitions/Date"}}}}], "description": "delete an event", "operationId": "delete_event", "tags": ["Events"], "responses": {"200": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "required": true}, {"in": "path", "type": "string", "name": "eventId", "description": "Event identifier.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["attendees", "start", "end"], "type": "object", "properties": {"end": {"type": "object", "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "$ref": "#/definitions/Date"}, "attendees": {"type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users.", "items": {"$ref": "#/definitions/Attendee"}}, "start": {"type": "object", "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "$ref": "#/definitions/Date"}}}}], "description": "retrieve an existing event", "operationId": "get_event", "tags": ["Events"], "responses": {"200": {"description": ""}}}}, "/calendar/v3/calendars/{calendarId}/events": {"post": {"parameters": [{"in": "path", "type": "string", "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["attendees", "start", "end"], "type": "object", "properties": {"end": {"type": "object", "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "$ref": "#/definitions/Date"}, "attendees": {"type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users.", "items": {"$ref": "#/definitions/Attendee"}}, "start": {"type": "object", "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "$ref": "#/definitions/Date"}}}}], "description": "creates a new event", "operationId": "create_event", "tags": ["Events"], "responses": {"201": {"description": ""}}}, "get": {"parameters": [{"in": "path", "type": "string", "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["attendees", "start", "end"], "type": "object", "properties": {"end": {"type": "object", "description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "$ref": "#/definitions/Date"}, "attendees": {"type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users.", "items": {"$ref": "#/definitions/Attendee"}}, "start": {"type": "object", "description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "$ref": "#/definitions/Date"}}}}], "description": "creates a new event", "operationId": "list_events", "tags": ["Events"], "responses": {"200": {"description": ""}}}}, "/admin/directory/v1/customer/{customer}/resources/calendars": {"post": {"parameters": [{"in": "path", "type": "string", "name": "customer", "description": "The unique ID for the customers Google account. As an account administrator, you can also use the my_customer alias to represent your accounts customer ID.", "required": true}, {"in": "body", "name": "data", "schema": {"required": ["resourceId", "resourceName"], "type": "object", "properties": {"resourceName": {"type": "string", "description": "The name of the calendar resource. For example, Training Room 1A"}, "resourceType": {"type": "string", "description": "The type of the calendar resource. Used for grouping resources in the calendar user interface."}, "resourceId": {"type": "string", "description": "The unique ID for the calendar resource."}, "resourceDescription": {"type": "string", "description": "The brief description of the calendar resource."}}}}], "description": "create a new calendar resource", "operationId": "create_resource", "tags": ["Resources"], "responses": {"201": {"description": ""}}}}}}, "is_public": false, "created_at": "2017-06-21T11:53:49.506Z", "modified_at": "2017-06-21T14:49:08.653Z"}}, {"model": "service_vault.servicevault", "pk": 62, "fields": {"name": "Picture Upload", "description": "uploads picture to pictshare.net and returns it's url", "uuid": "53df72b9-684c-458c-b5d0-a06a1f1266f0", "request_host": "pictshare.net", "upstream_url": "https://pictshare.net/backend.php/", "swagger_schema": {"swagger": "2.0", "info": {"title": "Picture Upload", "version": "0.1"}, "basePath": "/backend.php", "host": "pictshare.net", "schemes": ["https"], "paths": {"/": {"post": {"consumes": ["multipart/form-data"], "responses": {"405": {"description": "Invalid input"}}, "parameters": [{"in": "formData", "type": "file", "name": "postimage", "required": true}], "description": "Upload a picture to pictshare.net and get url of that pic in return", "operationId": "uploadPicture", "produces": ["application/json"], "summary": "Upload a picture"}}}}, "is_public": false, "created_at": "2017-06-22T10:42:41.632Z", "modified_at": "2017-06-30T11:15:09.774Z"}}, {"model": "service_vault.servicevault", "pk": 63, "fields": {"name": "Zomato", "description": "zomato food app", "uuid": "69aabf04-8fa9-455a-a690-defcf50ceb86", "request_host": "zomato.com", "upstream_url": "http://www.zomato.com", "swagger_schema": {"swagger": "2.0", "externalDocs": {"url": "https://www.zomato.com", "description": "See where your friends are dining"}, "info": {"contact": {"email": "api@zomato.com"}, "title": "Zomato API", "version": "1.0.0", "termsOfService": "https://www.zomato.com/conditions", "description": "Zomato Public API", "license": {"url": "http://www.apache.org/licenses/LICENSE-2.0.html", "name": "Apache 2.0\u00e5"}}, "tags": [{"description": "common", "name": "Common", "externalDocs": {"url": "http://www.zomato.com", "description": "Find out more"}}, {"description": "restaurant", "name": "Restaurant"}, {"description": "location", "name": "Location"}], "host": "virtserver.swaggerhub.com", "basePath": "/veris-amoghbanta/Zomato/1.0.0", "securityDefinitions": {"petstore_auth": {"scopes": {"write:pets": "modify pets in your account", "read:pets": "read your pets"}, "flow": "implicit", "type": "oauth2", "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog"}, "api_key": {"in": "header", "type": "apiKey", "name": "api_key"}}, "definitions": {"RestaurantL3": {"allOf": [{"$ref": "#/definitions/Restaurant"}, {"type": "object", "properties": {"photos": {"type": "array", "description": "<b>[Partner access]</b> List of restaurant photos", "items": {"$ref": "#/definitions/Photo"}}, "phone_numbers": {"type": "string", "example": "(212) 228-2930", "description": "<b>[Partner access]</b> Restaurant's contact numbers in csv format"}, "cuisines": {"type": "string", "example": "Cafe", "description": "List of cuisines served at the restaurant in csv format"}, "all_reviews": {"type": "array", "description": "<b>[Partner access]</b> List of restaurant reviews", "items": {"$ref": "#/definitions/Review"}}, "photo_count": {"type": "integer", "example": "18", "description": "<b>[Partner access]</b> Total number of photos for the restaurant, at max 10 photos for partner access"}, "all_reviews_count": {"type": "integer", "example": "15", "description": "<b>[Partner access]</b> Number of reviews for the restaurant"}}}]}, "User": {"type": "object", "properties": {"foodie_level": {"type": "string", "example": "Super Foodie", "description": "Text for user's foodie level"}, "profile_url": {"type": "string", "example": "https://www.zomato.com/john", "description": "URL for user's profile on Zomato"}, "profile_image": {"type": "string", "description": "URL for user's profile image"}, "foodie_color": {"type": "string", "example": "f58552", "description": "Color hex code used with foodie level on Zomato"}, "name": {"type": "string", "example": "John Doe", "description": "User's name"}, "zomato_handle": {"type": "string", "example": "John", "description": "User's @handle; uniquely identifies a user on Zomato"}, "foodie_level_num": {"type": "integer", "example": "9", "description": "Number to identify user's foodie level; ranges from 0 to 10"}, "profile_deeplink": {"type": "string", "example": "zoma.to/u/1170245", "description": "short URL for user's profile on Zomato; for use in apps or social sharing"}}}, "Photo": {"type": "object", "properties": {"id": {"type": "string", "example": "u_MjA5MjY1OTk5OT", "description": "ID of the photo"}, "width": {"type": "integer", "example": "640", "description": "Image width in pixel; usually 640"}, "caption": {"type": "string", "example": "#awesome", "description": "Caption of the photo"}, "user": {"type": "object", "description": "User who uploaded the photo", "$ref": "#/definitions/User"}, "friendly_time": {"type": "string", "example": "3 months ago", "description": "User friendly time string; denotes when the photo was uploaded"}, "timestamp": {"type": "integer", "example": "1435111770", "description": "Unix timestamp when the photo was uploaded"}, "likes_count": {"type": "integer", "example": "0", "description": "Number of likes on photo"}, "res_id": {"type": "integer", "example": "16782899", "description": "ID of restaurant for which the image was uploaded"}, "thumb_url": {"type": "string", "example": "https://b.zmtcdn.com/data/reviews_photos/c15/9eb13ceaf6e90129c276ce6ff980bc15_1435111695_200_thumb.JPG", "description": "URL for 200 X 200 thumb image file"}, "url": {"type": "string", "example": "https://b.zmtcdn.com/data/reviews_photos/c15/9eb13ceaf6e90129c276ce6ff980bc15_1435111695_640_640_thumb.JPG", "description": "URL of the image file"}, "height": {"type": "integer", "example": "640", "description": "Image height in pixel; usually 640"}, "comments_count": {"type": "integer", "example": "0", "description": "Number of comments on photo"}}}, "DailyMenuItem": {"type": "object", "properties": {"price": {"type": "string", "example": "149 K\u00c4\u008d", "description": "Menu Item Price"}, "dish_id": {"type": "integer", "example": "104089345", "description": "Menu Item ID "}, "name": {"type": "string", "example": "Tatar\u00c3\u00a1k ze sumce s toustem", "description": "Menu Item Title"}}}, "LocationDetails": {"type": "object", "properties": {"location": {"type": "object", "description": "location struct", "$ref": "#/definitions/Location"}, "popularity": {"type": "object", "$ref": "#/definitions/Popularity"}, "best_rated_restaurants": {"type": "array", "description": "list of top rated restaurants in location", "items": {"$ref": "#/definitions/RestaurantL3"}}}}, "Cuisine": {"required": ["cuisine_id", "cuisine_name"], "type": "object", "properties": {"cuisine_id": {"type": "integer", "example": "25", "description": "ID of the cuisine"}, "cuisine_name": {"type": "string", "example": "Chinese", "description": "Name of the cuisine"}}, "xml": {"name": "Cuisine"}}, "Order": {"type": "object", "properties": {"id": {"type": "integer", "format": "int64"}, "complete": {"type": "boolean", "default": false}, "quantity": {"type": "integer", "format": "int32"}, "status": {"enum": ["placed", "approved", "delivered"], "type": "string", "description": "Order Status"}, "petId": {"type": "integer", "format": "int64"}, "shipDate": {"type": "string", "format": "date-time"}}, "xml": {"name": "Order"}}, "Popularity": {"required": ["popularity", "nightlife_index"], "type": "object", "properties": {"nightlife_index": {"type": "number", "example": "4.95", "description": "Nightlife index of a location out of 5.00"}, "popularity": {"type": "number", "example": "4.92", "description": "Foodie index of a location out of 5.00"}, "top_cuisines": {"type": "array", "description": "Most popular cuisines in the locality", "items": {"type": "string", "example": "cafe"}}}, "xml": {"name": "Establishment"}}, "Location": {"type": "object", "properties": {"latitude": {"type": "number", "example": "40.742051", "description": "Coordinates of the (centre of) location"}, "title": {"type": "string", "example": "Chelsea Market, Chelsea, New York City", "description": "Name of the location"}, "longitude": {"type": "number", "example": "-74.004821", "description": "Coordinates of the (centre of) location"}, "city_id": {"type": "integer", "example": "280", "description": "ID of city"}, "country_id": {"type": "integer", "example": "216", "description": "ID of country"}, "city_name": {"type": "string", "example": "New York City", "description": "Name of the city"}, "country_name": {"type": "string", "example": "United States", "description": "Name of the country"}, "entity_id": {"type": "integer", "example": "36932", "description": "ID of location; (entity_id, entity_type) tuple uniquely identifies a location"}, "entity_type": {"type": "string", "example": "group", "description": "Type of location; one of [city, zone, subzone, landmark, group, metro, street]"}}}, "Geocode": {"type": "object", "properties": {"popularity": {"type": "object", "$ref": "#/definitions/Popularity"}, "locality": {"type": "object", "$ref": "#/definitions/Location"}, "link": {"type": "string", "example": "https://www.zomato.com/new-york-city/chelsea-restaurants", "description": "URL of the web search page of the locality"}, "nearby_restaurants": {"type": "array", "description": "list of nearby restaurants", "items": {"$ref": "#/definitions/RestaurantL3"}}}}, "Search": {"type": "object", "properties": {"results_found": {"type": "integer", "example": "53", "description": "Number of results found"}, "results_shown": {"type": "integer", "example": "10", "description": "The number of results fetched (used for pagination)"}, "restaurants": {"type": "array", "items": {"$ref": "#/definitions/RestaurantL3"}}, "results_start": {"type": "integer", "example": "11", "description": "The starting location within results from which the results were fetched (used for pagination) "}}}, "Tag": {"type": "object", "properties": {"id": {"type": "integer", "format": "int64"}, "name": {"type": "string"}}, "xml": {"name": "Tag"}}, "Locality": {"required": ["name", "city_name"], "type": "object", "properties": {"real_city_name": {"type": "string", "example": "New York City", "description": "Actual city name; can be different from city_name in some cases"}, "name": {"type": "string", "example": "Chelsea", "description": "Name of locality (subzone)"}, "city_name": {"type": "string", "example": "New York City", "description": "Name of city"}, "city_id": {"type": "integer", "example": "280", "description": "ID of city; corresponds to city_name"}, "subzone_id": {"type": "integer", "example": "114178", "description": "ID of locality (subzone)"}}, "xml": {"name": "Establishment"}}, "Restaurant": {"type": "object", "properties": {"id": {"type": "integer", "example": "16774318", "description": "ID of the restaurant"}, "location": {"type": "object", "description": "Restaurant location details", "$ref": "#/definitions/ResLocation"}, "menu_url": {"type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village/menu#tabtop", "description": "URL of the restaurant's menu page"}, "events_url": {"type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village/events#tabtop", "description": "URL of the restaurant's events page"}, "currency": {"type": "string", "example": "$", "description": "Local currency symbol; to be used with price"}, "has_online_delivery": {"type": "boolean", "example": "0", "description": "Whether the restaurant has online delivery enabled or not"}, "name": {"type": "string", "example": "Otto Enoteca & Pizzeria", "description": "Name of the restaurant"}, "thumb": {"type": "string", "example": "https://b.zmtcdn.com/data/pictures/chains/8/16774318/a54deb9e4dbb79dd7c8091b30c642077_featured_thumb.png", "description": "URL of the low resolution header image of restaurant"}, "average_cost_for_two": {"type": "integer", "example": "60", "description": "Average price of a meal for two people"}, "has_table_booking": {"type": "boolean", "example": "0", "description": "Whether the restaurant has table reservation enabled or not"}, "user_rating": {"type": "object", "description": "Restaurant rating details", "$ref": "#/definitions/UserRating"}, "photos_url": {"type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village/photos#tabtop", "description": "URL of the restaurant's photos page"}, "price_range": {"type": "integer", "example": "2", "description": "Price bracket of the restaurant (1 being pocket friendly and 4 being the costliest)"}, "featured_image": {"type": "string", "example": "https://d.zmtcdn.com/data/pictures/chains/8/16774318/a54deb9e4dbb79dd7c8091b30c642077_featured_v2.png", "description": "URL of the high resolution header image of restaurant"}, "url": {"type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village", "description": "URL of the restaurant page"}, "deeplink": {"type": "string", "example": "zomato://r/16774318", "description": "Short URL of the restaurant page; for use in apps or social shares"}, "is_delivering_now": {"type": "boolean", "example": "0", "description": "Valid only if has_online_delivery = 1; whether the restaurant is accepting online orders right now"}}}, "DailyMenu": {"type": "object", "properties": {"daily_menu": {"type": "array", "description": " List of restaurant's menu details", "items": {"$ref": "#/definitions/DailyMenuCategory"}}}}, "Zone": {"type": "object", "properties": {"zone_id": {"type": "integer", "example": "31", "description": "ID of zone"}, "name": {"type": "string", "example": "South Delhi", "description": "Name of the zone"}, "city_id": {"type": "integer", "example": "1", "description": "ID of city where zone lies"}}}, "Pet": {"required": ["name", "photoUrls"], "type": "object", "properties": {"id": {"type": "integer", "format": "int64"}, "tags": {"type": "array", "items": {"$ref": "#/definitions/Tag"}, "xml": {"name": "tag", "wrapped": true}}, "category": {"$ref": "#/definitions/Category"}, "status": {"enum": ["available", "pending", "sold"], "type": "string", "description": "pet status in the store"}, "name": {"type": "string", "example": "doggie"}, "photoUrls": {"type": "array", "items": {"type": "string"}, "xml": {"name": "photoUrl", "wrapped": true}}}, "xml": {"name": "Pet"}}, "ApiResponse": {"type": "object", "properties": {"type": {"type": "string"}, "message": {"type": "string"}, "code": {"type": "integer", "format": "int32"}}}, "DailyMenuCategory": {"type": "object", "properties": {"end_date": {"type": "string", "example": "2016-03-08 15:00", "description": "Daily Menu end timestamp"}, "dishes": {"type": "array", "description": "Menu item in the category", "items": {"$ref": "#/definitions/DailyMenuItem"}}, "name": {"type": "string", "example": "Vinohradsk\u00c3\u00bd pivovar", "description": "Name of the restaurant"}, "start_date": {"type": "string", "example": "2016-03-08 11:00", "description": "Daily Menu start timestamp"}, "daily_menu_id": {"type": "integer", "example": "16507624", "description": "ID of the restaurant"}}}, "ResLocation": {"type": "object", "properties": {"locality": {"type": "string", "example": "Greenwich Village", "description": "Name of the locality"}, "longitude": {"type": "number", "example": "-73.996155", "description": "Coordinates of the restaurant"}, "address": {"type": "string", "example": "1 5th Avenue, New York, NY 10003", "description": "Complete address of the restaurant"}, "country_id": {"type": "integer", "example": "216", "description": "ID of the country"}, "latitude": {"type": "number", "example": "40.732013", "description": "Coordinates of the restaurant"}, "city": {"type": "string", "example": "New York City", "description": "Name of the city"}, "zipcode": {"type": "string", "example": "10003", "description": "Zipcode"}}}, "Review": {"type": "object", "properties": {"id": {"type": "integer", "example": "24127336", "description": "ID of the review"}, "likes": {"type": "integer", "example": "0", "description": "No of likes received for review"}, "rating_text": {"type": "string", "example": "Insane!", "description": "Short description of the rating"}, "timestamp": {"type": "integer", "example": "1435507367", "description": "Unix timestamp for review_time_friendly"}, "review_time_friendly": {"type": "string", "example": "2 months ago", "description": "User friendly time string corresponding to time of review posting"}, "rating_color": {"type": "string", "example": "305D02", "description": "Color hex code used with the rating on Zomato"}, "review_text": {"type": "string", "example": "The best latte I've ever had. It tasted a little sweet", "description": "Review text"}, "user": {"type": "object", "description": "User details of author of review", "$ref": "#/definitions/User"}, "rating": {"type": "number", "example": "5", "description": "Rating on scale of 0 to 5 in increments of 0.5"}, "comments_count": {"type": "integer", "example": "0", "description": "No of comments on review"}}}, "Category": {"type": "object", "properties": {"id": {"type": "integer", "format": "int64"}, "name": {"type": "string"}}, "xml": {"name": "Category"}}, "UserRating": {"type": "object", "properties": {"rating_text": {"type": "string", "example": "Very Good", "description": "Short description of the rating"}, "rating_color": {"type": "string", "example": "5BA829", "description": "Color hex code used with the rating on Zomato"}, "aggregate_rating": {"type": "number", "example": "3.7", "description": "Restaurant rating on a scale of 0.0 to 5.0 in increments of 0.1"}, "votes": {"type": "integer", "example": "1046", "description": "Number of ratings received"}}}, "Collection": {"type": "object", "properties": {"collection_id": {"type": "integer", "example": "1", "description": "ID of the collection of restaurants"}, "title": {"type": "string", "example": "Trending this week", "description": "Collection name"}, "res_count": {"type": "integer", "example": "30", "description": "Number of restaurants in the collection"}, "share_url": {"type": "string", "example": "http://www.zoma.to/c-280/1", "description": "short URL for apps and social sharing"}, "url": {"type": "string", "example": "https://www.zomato.com/new-york-city/top-restaurants", "description": "URL of the collection page"}, "description": {"type": "string", "example": "The most popular restaurants in town this week", "description": "Short description of the collection"}, "image_url": {"type": "string", "example": "https://b.zmtcdn.com/data/collections/e40960514831cb9b74c552d69eceee0f_1418387628_l.jpg", "description": "URL for header image of the collection"}}, "xml": {"name": "Collection"}}, "Categories": {"required": ["category_id", "category_name"], "type": "object", "properties": {"category_id": {"type": "integer", "example": "3", "description": "ID of the category type"}, "category_name": {"type": "string", "example": "Nightlife", "description": "Name of the category type"}}, "xml": {"name": "Categories"}}, "Establishment": {"required": ["establishment_id", "establishment_name"], "type": "object", "properties": {"establishment_id": {"type": "integer", "example": "31", "description": "ID of the establishment type"}, "establishment_name": {"type": "string", "example": "Bakery", "description": "Name of the establishment type"}}, "xml": {"name": "Establishment"}}, "City": {"required": ["id", "name"], "type": "object", "properties": {"id": {"type": "integer", "example": "280", "description": "ID of the city"}, "state_id": {"type": "integer", "example": "103", "description": "ID of the state"}, "country_name": {"type": "string", "example": "United States", "description": "Name of the country"}, "is_state": {"type": "boolean", "example": "0", "description": "Whether this location is a state"}, "state_name": {"type": "string", "example": "New York State", "description": "Name of the state"}, "name": {"type": "string", "example": "New York City, NY", "description": "City name"}, "country_id": {"type": "integer", "example": "216", "description": "ID of the country"}, "state_code": {"type": "string", "example": "NY", "description": "Short code for the state"}}, "xml": {"name": "City"}}, "PopularityLoc": {"allOf": [{"$ref": "#/definitions/Popularity"}, {"type": "object", "properties": {"nearby_restaurants": {"type": "array", "description": "popular restaurants around the provided coordinates", "items": {"$ref": "#/definitions/RestaurantL3"}}, "link": {"type": "string", "example": "https://www.zomato.com/new-york-city/chelsea-restaurants", "description": "URL to web search page of locality"}}}]}, "Subzone": {"type": "object", "properties": {"zone_id": {"type": "integer", "example": "4", "description": "ID of the zone where subzone lies"}, "name": {"type": "string", "example": "Saket", "description": "Name of the subzone"}, "subzone_id": {"type": "integer", "example": "23", "description": "ID of subzone"}}}}, "schemes": ["https"], "paths": {"/location_details": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "entity_id", "description": "location id obtained from locations api", "required": true}, {"in": "query", "type": "string", "name": "entity_type", "description": "location type obtained from locations api", "required": true}], "responses": {"403": {"description": "Invalid API key"}, "200": {"description": "successful operation", "schema": {"type": "object", "$ref": "#/definitions/LocationDetails"}}}, "description": "Get Foodie Index, Nightlife Index, Top Cuisines and Best rated restaurants in a given location", "operationId": "location_details", "produces": ["application/json", "application/xml"], "summary": "Get Zomato location details", "tags": ["location"]}}, "/categories": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}], "responses": {"403": {"description": "Invalid  key"}, "200": {"description": "successful operation", "schema": {"type": "array", "items": {"$ref": "#/definitions/Categories"}}}}, "description": "Get a list of categories. List of all restaurants categorized under a particular restaurant type can  be obtained using /Search API with Category ID as inputs</p>", "operationId": "categories", "produces": ["application/json", "application/xml"], "summary": "Get list of Categories", "tags": ["common"]}}, "/establishments": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "city_id", "description": "id of the city", "required": false}, {"in": "query", "type": "number", "name": "lat", "description": "latitude / longitude of any point within a city", "required": false}, {"in": "query", "type": "number", "name": "lon", "description": "latitude / longitude of any point within a city", "required": false}], "responses": {"403": {"description": "Invalid API key"}, "200": {"description": "successful operation", "schema": {"type": "array", "items": {"$ref": "#/definitions/Establishment"}}}}, "description": "Get a list of restaurant types in a city. The location/City input can be provided in the following ways -<br><ol><li>Using Zomato City ID<li>Using coordinates of any location within a city</ol><p>List of all restaurants categorized under a particular restaurant type can  obtained using /Search API with Establishment ID and location details as inputs</p>", "operationId": "establishments", "produces": ["application/xml", "application/json"], "summary": "Get list of restaurant types in a city", "tags": ["common"]}}, "/locations": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "string", "name": "query", "description": "suggestion for location name", "required": true}, {"in": "query", "type": "number", "name": "lat", "description": "latitude", "required": false}, {"in": "query", "type": "number", "name": "lon", "description": "longitude", "required": false}, {"in": "query", "type": "integer", "name": "count", "description": "max number of results to fetch", "required": false}], "responses": {"403": {"description": "Invalid API key"}, "200": {"description": "successful operation", "schema": {"type": "object", "$ref": "#/definitions/Location"}}}, "description": "Search for Zomato locations by keyword. Provide coordinates to get better search results", "operationId": "locations", "produces": ["application/json", "application/xml"], "summary": "Search for locations", "tags": ["location"]}}, "/restaurant": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "res_id", "description": "id of restaurant whose details are requested", "required": true}], "responses": {"400": {"description": "Invalid res_id"}, "200": {"description": "successful operation", "schema": {"type": "object", "$ref": "#/definitions/RestaurantL3"}}}, "description": "Get detailed restaurant information using Zomato restaurant ID. Partner Access is required to access photos and reviews.", "operationId": "restaurant", "produces": ["application/json", "application/xml"], "summary": "Get restaurant details", "tags": ["restaurant"]}}, "/cuisines": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"required": false, "type": "integer", "collectionFormat": "csv", "in": "query", "description": "id of the city for which cuisines are needed", "name": "city_id"}, {"in": "query", "type": "number", "name": "lat", "description": "latitude / longitude of any point within a city", "required": false}, {"in": "query", "type": "number", "name": "lon", "description": "latitude / longitude of any point within a city", "required": false}], "responses": {"403": {"description": "Invalid API key"}, "200": {"description": "successful operation", "schema": {"type": "array", "items": {"$ref": "#/definitions/Cuisine"}}}}, "description": "Get a list of all cuisines of restaurants listed in a city. The location/city input can be provided in the following ways -<br><ol><li>Using Zomato City ID<li>Using coordinates of any location within a city</ol><p>List of all restaurants serving a particular cuisine can be obtained using '/search' API with cuisine ID and location details</p>", "operationId": "cuisines", "produces": ["application/json", "application/xml"], "summary": "Get list of all cuisines in a city", "tags": ["common"]}}, "/collections": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "city_id", "description": "id of the city for which collections are needed", "required": false}, {"in": "query", "type": "number", "name": "lat", "description": "latitude / longitude of any point within a city", "required": false}, {"in": "query", "type": "number", "name": "lon", "description": "latitude / longitude of any point within a city", "required": false}, {"in": "query", "type": "integer", "name": "count", "description": "max number of results needed", "required": false}], "responses": {"403": {"description": "Invalid city_id"}, "200": {"description": "successful operation", "schema": {"type": "array", "items": {"$ref": "#/definitions/Collection"}}}}, "description": "Returns Zomato Restaurant Collections in a City. The location/City input can be provided in the following ways -<br><ol><li>Using Zomato City ID <li>Using coordinates of any location within a city</ol><p>List of all restaurants listed in any particular Zomato Collection can be obtained using the '/search' API with Collection ID and Zomato City ID as the input</p>", "operationId": "collections", "produces": ["application/json", "application/xml"], "summary": "Get Zomato collections in a city", "tags": ["common"]}}, "/search": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "entity_id", "description": "location id", "required": false}, {"required": false, "type": "string", "enum": ["city", "subzone", "zone", "landmark", "metro", "group"], "in": "query", "description": "location type", "name": "entity_type"}, {"in": "query", "type": "string", "name": "q", "description": "search keyword", "required": false}, {"in": "query", "type": "integer", "name": "start", "description": "fetch results after offset", "required": false}, {"in": "query", "type": "integer", "name": "count", "description": "max number of results to display", "required": false}, {"in": "query", "type": "number", "name": "lat", "description": "latitude", "required": false}, {"in": "query", "type": "number", "name": "lon", "description": "longitude", "required": false}, {"in": "query", "type": "number", "name": "radius", "description": "radius around (lat,lon); to define search area, defined in meters(M)", "required": false}, {"in": "query", "type": "string", "name": "cuisines", "description": "list of cuisine id's separated by comma", "collectionFormat": "csv"}, {"in": "query", "type": "string", "name": "establishment_type", "description": "estblishment id obtained from establishments call", "collectionFormat": "csv"}, {"in": "query", "type": "string", "name": "collection_id", "description": "collection id obtained from collections call", "required": false}, {"in": "query", "type": "string", "name": "category", "description": "category ids obtained from categories call", "required": false}, {"required": false, "type": "string", "enum": ["cost", "rating", "real_distance"], "in": "query", "description": "sort restaurants by ...", "name": "sort"}, {"required": false, "type": "string", "enum": ["asc", "desc"], "in": "query", "description": "used with 'sort' parameter to define ascending / descending", "name": "order"}], "responses": {"400": {"description": "failed"}, "200": {"description": "successful", "schema": {"type": "object", "$ref": "#/definitions/Search"}}}, "description": "The location input can be specified using Zomato location ID or coordinates. Cuisine / Establishment / Collection IDs can be obtained from respective api calls. Get up to 100 restaurants by changing the 'start' and 'count' parameters with the maximum value of count being 20. Partner Access is required to access photos and reviews.<br>Examples:<ol> <li> To search for 'Italian' restaurants in 'Manhattan, New York City', set cuisines = 55, entity_id = 94741 and entity_type = zone</li><li>To search for 'cafes' in 'Manhattan, New York City', set establishment_type = 1, entity_type = zone and entity_id = 94741 </li><li>Get list of all restaurants in 'Trending this Week' collection in 'New York City' by using entity_id = 280, entity_type = city and collection_id = 1</ol>", "operationId": "search", "produces": ["application/json", "application/xml"], "summary": "Search for restaurants", "tags": ["restaurant"]}}, "/geocode": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "number", "name": "lat", "description": "latitude", "required": true}, {"in": "query", "type": "number", "name": "lon", "description": "longitude", "required": true}], "responses": {"200": {"description": "successful operation", "schema": {"type": "object", "$ref": "#/definitions/Geocode"}}}, "description": "Get Foodie and Nightlife Index, list of popular cuisines and nearby restaurants around the given coordinates", "operationId": "geocode", "produces": ["application/json", "application/xml"], "summary": "Get location details based on coordinates", "tags": ["common"]}}, "/dailymenu": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user_key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "res_id", "description": "id of restaurant whose details are requested", "required": true}], "responses": {"400": {"description": "Invalid res_id"}, "200": {"description": "successful operation", "schema": {"type": "object", "$ref": "#/definitions/DailyMenu"}}}, "description": "Get daily menu using Zomato restaurant ID.", "operationId": "restaurant-daily", "produces": ["application/json", "application/xml"], "summary": "Get daily menu of a restaurant", "tags": ["restaurant"]}}, "/reviews": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"in": "query", "type": "integer", "name": "res_id", "description": "id of restaurant whose details are requested", "required": true}, {"in": "query", "type": "integer", "name": "start", "description": "fetch results after this offset", "required": false}, {"in": "query", "type": "integer", "name": "count", "description": "max number of results to retrieve", "required": false}], "responses": {"400": {"description": "Invalid res_id"}, "200": {"description": "successful operation", "schema": {"type": "array", "items": {"$ref": "#/definitions/Review"}}}}, "description": "Get restaurant reviews using the Zomato restaurant ID. Only 5 latest reviews are available under the Basic API plan.", "operationId": "reviews", "produces": ["application/json", "application/xml"], "summary": "Get restaurant reviews", "tags": ["restaurant"]}}, "/cities": {"get": {"parameters": [{"in": "header", "type": "string", "name": "user-key", "description": "your API key", "required": true}, {"required": false, "type": "string", "collectionFormat": "csv", "in": "query", "description": "query by city name", "name": "q"}, {"in": "query", "type": "number", "name": "lat", "description": "latitude", "required": false}, {"in": "query", "type": "number", "name": "lon", "description": "longitude", "required": false}, {"required": false, "type": "string", "collectionFormat": "csv", "in": "query", "description": "comma separated city_id values", "name": "city_ids"}, {"in": "query", "type": "integer", "name": "count", "description": "number of max results to display", "required": false}], "responses": {"400": {"description": "Invalid input"}, "200": {"description": "successful operation", "schema": {"type": "array", "items": {"$ref": "#/definitions/City"}}}}, "description": "Find the Zomato ID and other details for a city . You can obtain the Zomato City ID in one of the following ways:<br><ol> <li>City Name in the Search Query - Returns list of cities matching the query<li>Using coordinates - Identifies the city details based on the coordinates of any location inside a city</ol><p>If you already know the Zomato City ID, this API can be used to get other details of the city.</p>", "operationId": "cities", "produces": ["application/json", "application/xml"], "summary": "Get city details", "tags": ["common"]}}}}, "is_public": false, "created_at": "2017-06-28T10:32:47.686Z", "modified_at": "2017-06-30T11:37:47.885Z"}}]