[{"model": "service_vault.servicevault", "pk": 40, "fields": {"name": "NoAppOrganizations", "description": "ss", "uuid": "bfa69060-a4ab-4c4c-996e-129f95bc1bf2", "request_host": "organizations.veris.in", "upstream_url": "http://local.veris.in:8015", "swagger_schema": {"swagger": "2.0", "info": {"version": "", "title": "Organization-Member Micro-service API"}, "securityDefinitions": {"basic": {"type": "basic"}}, "paths": {"/micro-service/user/{owner}/organization/{organization}/member/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["micro-service"], "operationId": "user_organization_member_partial_update", "parameters": [{"required": true, "name": "owner", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "uuid", "description": "Member uuid, this token will uniquely identify Member.", "type": "string", "in": "path"}, {"required": true, "name": "organization", "description": "Member Organization.", "type": "string", "in": "path"}, {"schema": {"properties": {"organization": {"description": "Member Organization.", "type": "string"}, "name": {"description": "Required. 64 characters or fewer.", "type": "string"}, "type": {"description": "Member type, for internal user only", "type": "string"}, "user": {"description": "User uuid, this uid will identify associated User with respective Member.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["micro-service"], "operationId": "user_organization_member_delete", "parameters": [{"required": true, "name": "owner", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "uuid", "description": "Member uuid, this token will uniquely identify Member.", "type": "string", "in": "path"}, {"required": true, "name": "organization", "description": "Member Organization.", "type": "string", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["micro-service"], "operationId": "user_organization_member_read", "parameters": [{"required": true, "name": "owner", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "uuid", "description": "Member uuid, this token will uniquely identify Member.", "type": "string", "in": "path"}, {"required": true, "name": "organization", "description": "Member Organization.", "type": "string", "in": "path"}]}}, "/micro-service/member/{member_user_uuid}/organization/": {"get": {"tags": ["micro-service"], "summary": "This viewset will be used to list user memberships.", "operationId": "member_organization_list", "description": "This viewset will be used to list user memberships.", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "member_user_uuid", "description": "", "type": "string", "in": "path"}, {"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/micro-service/user/{owner}/organization/{organization}/member/": {"post": {"tags": ["micro-service"], "summary": ":param request: Django request", "operationId": "user_organization_member_create", "consumes": ["application/json"], "description": ":param request: Django request\n:param owner: owner/user uuid\n:param organization: organization token.\n:return: Just created Organization", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "organization", "description": "Member Organization.", "type": "string", "in": "path"}, {"schema": {"required": ["name", "user", "type", "organization"], "properties": {"organization": {"description": "Member Organization.", "type": "string"}, "name": {"description": "Required. 64 characters or fewer.", "type": "string"}, "type": {"description": "Member type, for internal user only", "type": "string"}, "user": {"description": "User uuid, this uid will identify associated User with respective Member.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["micro-service"], "operationId": "user_organization_member_list", "parameters": [{"required": true, "name": "owner", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "organization", "description": "Member Organization.", "type": "string", "in": "path"}, {"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/micro-service/user/{owner}/organization/{token}/": {"patch": {"tags": ["micro-service"], "summary": "Organization Viewset", "operationId": "user_organization_partial_update", "consumes": ["application/json"], "description": "Organization Viewset", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string", "in": "path"}, {"required": true, "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "type": "string", "in": "path"}, {"schema": {"properties": {"name": {"description": "Required. 64 characters or fewer.", "type": "string"}, "avatar": {"description": "", "type": "string"}, "owner": {"description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"tags": ["micro-service"], "summary": "Organization Viewset", "operationId": "user_organization_delete", "description": "Organization Viewset", "responses": {"204": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string", "in": "path"}, {"required": true, "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "type": "string", "in": "path"}]}, "get": {"tags": ["micro-service"], "summary": "Organization Viewset", "operationId": "user_organization_read", "description": "Organization Viewset", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string", "in": "path"}, {"required": true, "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "type": "string", "in": "path"}]}}, "/micro-service/user/{owner}/organization/": {"post": {"tags": ["micro-service"], "summary": ":param request: Django request", "operationId": "user_organization_create", "consumes": ["application/json"], "description": ":param request: Django request\n:param owner: owner/user uuid\n:return: Just created Organization", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string", "in": "path"}, {"schema": {"required": ["name", "avatar", "owner"], "properties": {"name": {"description": "Required. 64 characters or fewer.", "type": "string"}, "avatar": {"description": "", "type": "string"}, "owner": {"description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["micro-service"], "summary": "Organization Viewset", "operationId": "user_organization_list", "description": "Organization Viewset", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string", "in": "path"}, {"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/micro-service/user/{owner}/organization/{token}/services/": {"get": {"tags": ["micro-service"], "summary": ":param request: Django request", "operationId": "user_organization_get_organization_service", "description": ":param request: Django request\n:param owner: owner/user uuid\n:param token: organization uuid\n:return: Organization services", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "owner", "description": "User uuid, this token will identify who is the owner of respective Organization.", "type": "string", "in": "path"}, {"required": true, "name": "token", "description": "Organization uuid, this token will uniquely identify Organization.", "type": "string", "in": "path"}]}}}}, "is_public": false, "created_at": "2017-04-27T08:32:31.564Z", "modified_at": "2017-07-13T06:38:22.246Z"}}, {"model": "service_vault.servicevault", "pk": 44, "fields": {"name": "Keen", "description": "", "uuid": "8c214d55-bc40-471b-bd43-788c4c4f037b", "request_host": "keen.io", "upstream_url": "https://api.keen.io/3.0", "swagger_schema": {"schemes": ["https"], "host": "pictshare.net", "swagger": "2.0", "info": {"version": "0.1", "title": "Picture Upload"}, "basePath": "/backend.php", "paths": {"/": {"post": {"summary": "Upload a picture", "produces": ["application/json"], "operationId": "uploadPicture", "consumes": ["multipart/form-data"], "description": "Upload a picture to pictshare.net and get url of that pic in return", "responses": {"405": {"description": "Invalid input"}}, "parameters": [{"required": true, "name": "postimage", "type": "file", "in": "formData"}]}}}}, "is_public": false, "created_at": "2017-05-04T09:26:05.180Z", "modified_at": "2017-06-22T11:07:53.027Z"}}, {"model": "service_vault.servicevault", "pk": 45, "fields": {"name": "NoAppAuthentication", "description": "", "uuid": "7de21c98-a870-4b50-b954-392db4e50ba1", "request_host": "users.veris.in", "upstream_url": "http://local.veris.in:8016", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "local.veris.in:8016", "swagger": "2.0", "info": {"version": "", "title": "{project_name} API"}, "paths": {"/micro-service/user/{uuid}/": {"patch": {"tags": ["user"], "summary": "Note : username Cannot be updated from here.", "operationId": "partial_update", "consumes": ["application/json"], "description": "Note : username Cannot be updated from here.", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "User uuid, this token will be used to link user in other services.", "type": "string", "in": "path"}, {"schema": {"properties": {"name": {"description": "Required. 100 characters or fewer.", "type": "string"}, "avatar": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"tags": ["user"], "summary": "Note : username Cannot be updated from here.", "operationId": "delete", "description": "Note : username Cannot be updated from here.", "responses": {"204": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "User uuid, this token will be used to link user in other services.", "type": "string", "in": "path"}]}, "get": {"tags": ["user"], "summary": "get user profile", "operationId": "read", "description": "Note : username Cannot be updated from here.", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "User uuid, this token will be used to link user in other services.", "type": "string", "in": "path"}]}}, "/micro-service/user/": {"post": {"tags": ["user"], "summary": "Register a new user", "operationId": "create", "consumes": ["application/json"], "description": "Register a new user", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["password", "email", "avatar"], "properties": {"name": {"description": "Required. 100 characters or fewer.", "type": "string"}, "avatar": {"description": "", "type": "string"}, "password": {"description": "", "type": "string"}, "email": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/micro-service/user/login/": {"post": {"tags": ["user"], "summary": "user authentication", "operationId": "user_login", "consumes": ["application/json"], "description": "user authentication", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["email", "password"], "properties": {"password": {"description": "", "type": "string"}, "email": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-05-15T10:08:50.935Z", "modified_at": "2017-07-13T06:38:16.259Z"}}, {"model": "service_vault.servicevault", "pk": 47, "fields": {"name": "WorkflowManagment", "description": "", "uuid": "662fb858-b9c8-46fb-abb8-dcfe07a5c13d", "request_host": "mistral.veris.in", "upstream_url": "http://192.168.1.96:8989", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "definitions": {"execution": {"properties": {"state": {"description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "description": {"description": "description of workflow execution", "type": "string"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "task_execution_id": {"description": "reference to the parent task execution", "type": "string"}, "workflow_id": {"description": "reference to workflow ID", "type": "string"}, "output": {"description": "output is a workflow output", "type": "object"}, "workflow_name": {"description": "reference to workflow definition", "type": "string"}, "state_info": {"description": "an optional state information string", "type": "string"}}}, "workflow": {"properties": {"updated_at": {"description": "", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "created_at": {"description": "description of workflow", "type": "string"}, "definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}}}}, "host": "0.0.0.0:8989", "swagger": "2.0", "info": {"version": "2.0", "title": "Mistral API"}, "paths": {"/v2/workflows/": {"post": {"tags": ["workflows"], "summary": "Create a mistral workflow", "operationId": "workflow_create", "consumes": ["application/json"], "description": "Create a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["name", "input"], "properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["workflows"], "summary": "List mistral workflows", "operationId": "workflow_create", "consumes": ["application/json"], "description": "List mistral workflows", "responses": {"201": {"description": ""}}, "parameters": [{"required": false, "name": "marker", "type": "string", "in": "query"}, {"required": false, "name": "limit", "type": "string", "in": "query"}, {"required": false, "name": "fields", "type": "string", "in": "query"}, {"required": false, "name": "name", "type": "string", "in": "query"}, {"required": false, "name": "definition", "type": "string", "in": "query"}, {"required": false, "name": "project_id", "type": "string", "in": "query"}, {"required": false, "name": "tags", "type": "string", "in": "query"}]}}, "/v2/workflows/{identifier}": {"delete": {"tags": ["workflows"], "summary": "Delete a mistral workflow", "operationId": "workflow_delete", "consumes": ["application/json"], "description": "Delete a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}, {"schema": {"properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["workflows"], "summary": "Retrieve a mistral workflow", "operationId": "workflow_get", "consumes": ["application/json"], "description": "Retrieve a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}]}, "put": {"tags": ["workflows"], "summary": "Update a mistral workflow", "operationId": "workflow_update", "consumes": ["application/json"], "description": "Update a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}, {"schema": {"properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/v2/executions/": {"post": {"tags": ["executions"], "summary": "Execute a mistral workflow or action", "operationId": "execution_create", "consumes": ["application/json"], "description": "Execute a mistral workflow or action", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["input"], "properties": {"state": {"description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "description": {"description": "description of workflow execution", "type": "string"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "task_execution_id": {"description": "reference to the parent task execution", "type": "string"}, "workflow_id": {"description": "reference to workflow ID", "type": "string"}, "output": {"description": "output is a workflow output", "type": "object"}, "workflow_name": {"description": "reference to workflow definition", "type": "string"}, "state_info": {"description": "an optional state information string", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-05-22T09:36:27.019Z", "modified_at": "2017-07-13T06:38:10.480Z"}}, {"model": "service_vault.servicevault", "pk": 48, "fields": {"name": "NoAppKeyValStore", "description": "", "uuid": "93ad787a-3232-48b5-af10-e5f76d752377", "request_host": "redis.veris.in", "upstream_url": "http://192.168.1.96:8000", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "localhost:8000", "swagger": "2.0", "info": {"version": "", "title": "KeyValue Store"}, "paths": {"/api/v1/sessions/{uuid}/write/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_write", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "Key", "type": "string", "in": "header"}]}}, "/api/v1/sessions/{uuid}/read/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_read", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "Key", "type": "string", "in": "header"}]}}}}, "is_public": false, "created_at": "2017-05-24T14:17:16.551Z", "modified_at": "2017-07-13T06:38:06.116Z"}}, {"model": "service_vault.servicevault", "pk": 49, "fields": {"name": "NoAppNotifications", "description": "Send notification to the users using SMS, Email or Push.", "uuid": "5dc46cd2-784f-42f5-a730-56048662b45f", "request_host": "notify.veris.in", "upstream_url": "http://local.veris.in:8011", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "local.veris.in:8011", "swagger": "2.0", "info": {"version": "", "title": "V-Notification API"}, "paths": {"/micro-service/notification/sms/twilio/": {"post": {"tags": ["sms"], "summary": ":param request:", "operationId": "send_sms", "consumes": ["application/json"], "description": ":param request:\n:return:", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["to", "body", "provider", "account_sid", "auth_token"], "properties": {"to": {"description": "", "type": "string"}, "notification_type": {"description": "", "type": "string"}, "account_sid": {"description": "Twilio Account SID.", "type": "string"}, "body": {"description": "", "type": "string"}, "auth_token": {"description": "Twilio Auth Token.", "type": "string"}, "from_": {"description": "", "type": "string"}, "provider": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/micro-service/notification/email/gmail/": {"post": {"tags": ["email"], "summary": ":param request:", "operationId": "gmail", "consumes": ["application/json"], "description": ":param request:\n:return:", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["to", "subject", "body", "provider", "username", "password"], "properties": {"to": {"description": "", "type": "string"}, "subject": {"description": "", "type": "string"}, "from_email": {"description": "", "type": "string"}, "html_message": {"description": "", "type": "boolean"}, "body": {"description": "", "type": "string"}, "username": {"description": "Gmail Account Username", "type": "string"}, "password": {"description": "Gmail Account Password", "type": "string"}, "notification_type": {"description": "", "type": "string"}, "provider": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/micro-service/notification/email/sendgrid/": {"post": {"tags": ["email"], "summary": ":param request:", "operationId": "sendgrid", "consumes": ["application/json"], "description": ":param request:\n:return:", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["to", "subject", "body", "provider", "sendgrid_api_key"], "properties": {"to": {"description": "", "type": "string"}, "subject": {"description": "", "type": "string"}, "notification_type": {"description": "", "type": "string"}, "body": {"description": "", "type": "string"}, "html_message": {"description": "", "type": "boolean"}, "from_email": {"description": "", "type": "string"}, "sendgrid_api_key": {"description": "SendGrid API key.", "type": "string"}, "provider": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-05-25T14:05:43.794Z", "modified_at": "2017-07-13T06:37:59.806Z"}}, {"model": "service_vault.servicevault", "pk": 50, "fields": {"name": "MultiFactorAuthentication", "description": "", "uuid": "6d4f96f3-6b44-489e-80dc-b4f18bab8300", "request_host": "mfa.veris.in", "upstream_url": "http://local.veris.in:8017", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "local.veris.in:8017", "swagger": "2.0", "info": {"version": "", "title": "Rest PyOTP APIs"}, "paths": {"/generate-otp/totp/provision-uri/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["generate-otp"], "operationId": "totp_generate_totp_provision_uri", "parameters": [{"schema": {"required": ["time", "name", "issuer_name"], "properties": {"time": {"description": "OTP Validity-Time (in seconds).", "type": "integer"}, "name": {"description": "name of the account", "type": "string"}, "issuer_name": {"description": "name of the OTP issuer", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/verify-otp/{otp_type})/{uuid}/": {"post": {"summary": ":param request: Django request", "operationId": "verify_otp", "consumes": ["application/json"], "description": ":param request: Django request\n:param otp_type: otp_type  [hotp/totp]\n:param uuid: OTP instance UUID\n:return: 200_ok OR 400_bad_request", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "otp_type", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "uuid", "description": "Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"required": ["otp"], "properties": {"otp": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/verify-otp/": {"post": {"operationId": "verify", "description": ":param request: Django request\n:return: 200_ok OR 400_bad_request", "responses": {"201": {"description": ""}}, "summary": ":param request: Django request", "parameters": []}}, "/generate-otp/hotp/provision-uri/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["generate-otp"], "operationId": "hotp_generate_hotp_provision_uri", "parameters": [{"schema": {"required": ["count", "name", "issuer_name"], "properties": {"count": {"description": "OTP Counter.", "type": "integer"}, "initial_count": {"description": "starting counter value, defaults to 0", "type": "string"}, "name": {"description": "name of the account", "type": "string"}, "issuer_name": {"description": "name of the OTP issuer", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/generate-otp/": {"post": {"operationId": "generate_otp", "consumes": ["application/json"], "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["time", "unique_identifier"], "properties": {"time": {"description": "OTP Validity-Time (in seconds).", "type": "integer"}, "unique_identifier": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/generate-otp/hotp/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["generate-otp"], "operationId": "generate_hotp", "parameters": [{"schema": {"required": ["count"], "properties": {"count": {"description": "OTP Counter.", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/generate-otp/totp/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["generate-otp"], "operationId": "generate_totp", "parameters": [{"schema": {"required": ["time"], "properties": {"time": {"description": "OTP Validity-Time (in seconds).", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-05-26T11:29:23.773Z", "modified_at": "2017-07-13T06:37:48.425Z"}}, {"model": "service_vault.servicevault", "pk": 51, "fields": {"name": "NoAppMarketplace", "description": "Service to manage both the Internal & External Services", "uuid": "6ee1ddc7-ab7e-4243-a7be-b8285aee5514", "request_host": "marketplace.veris.in", "upstream_url": "http://local.veris.in:8014", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "local.veris.in:8014", "swagger": "2.0", "info": {"version": "", "title": "{project_name} API"}, "paths": {"/micro-service/service-vault/service/{uuid}/apis/": {"get": {"tags": ["service"], "summary": ":param request: Django request param", "operationId": "service_get_service_apis_from_kong", "description": ":param request: Django request param\n:param uuid: service vault uuid\n:return: Service APIS or operations in swagger", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "type": "string", "in": "path"}]}}, "/micro-service/service-vault/service/": {"post": {"tags": ["service"], "summary": "Service Vault Viewset, every resource http request handles by this class", "operationId": "service_create", "consumes": ["application/json"], "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["name", "request_host", "upstream_url", "swagger_schema"], "properties": {"upstream_url": {"description": "Required. 200 characters or fewer.", "type": "string"}, "swagger_schema": {"description": "", "type": "string"}, "request_host": {"description": "Resource Host, to be passed to kong", "type": "string"}, "name": {"description": "Required. 30 characters or fewer.", "type": "string"}, "description": {"description": "Service Description", "type": "string"}, "is_public": {"description": "If checked , this service will be publicly available for use.", "type": "boolean"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["service"], "summary": "Service Vault Viewset, every resource http request handles by this class", "operationId": "service_list", "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "responses": {"200": {"description": ""}}, "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/micro-service/service-vault/proxy-kong/{path}": {"patch": {"tags": ["proxy-kong"], "summary": "Proxy To kong", "operationId": "proxy-kong_partial_update", "description": "Proxy To kong", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "path", "description": "", "type": "string", "in": "path"}]}, "post": {"tags": ["proxy-kong"], "summary": "Proxy To kong", "operationId": "proxy-kong_create", "description": "Proxy To kong", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "path", "description": "", "type": "string", "in": "path"}]}, "delete": {"tags": ["proxy-kong"], "summary": "Proxy To kong", "operationId": "proxy-kong_delete", "description": "Proxy To kong", "responses": {"204": {"description": ""}}, "parameters": [{"required": true, "name": "path", "description": "", "type": "string", "in": "path"}]}, "get": {"tags": ["proxy-kong"], "summary": "Proxy To kong", "operationId": "proxy-kong_read", "description": "Proxy To kong", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "path", "description": "", "type": "string", "in": "path"}]}, "put": {"tags": ["proxy-kong"], "summary": "Proxy To kong", "operationId": "proxy-kong_update", "description": "Proxy To kong", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "path", "description": "", "type": "string", "in": "path"}]}}, "/micro-service/service-vault/service/{uuid}/": {"patch": {"tags": ["service"], "summary": "Service Vault Viewset, every resource http request handles by this class", "operationId": "service_partial_update", "consumes": ["application/json"], "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "type": "string", "in": "path"}, {"schema": {"properties": {"upstream_url": {"description": "Required. 200 characters or fewer.", "type": "string"}, "swagger_schema": {"description": "", "type": "string"}, "request_host": {"description": "Resource Host, to be passed to kong", "type": "string"}, "name": {"description": "Required. 30 characters or fewer.", "type": "string"}, "description": {"description": "Service Description", "type": "string"}, "is_public": {"description": "If checked , this service will be publicly available for use.", "type": "boolean"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"tags": ["service"], "summary": "Service Vault Viewset, every resource http request handles by this class", "operationId": "service_delete", "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "responses": {"204": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "type": "string", "in": "path"}]}, "get": {"tags": ["service"], "summary": "Service Vault Viewset, every resource http request handles by this class", "operationId": "service_read", "description": "Service Vault Viewset, every resource http request handles by this class\n\n**Query Parameters**:\n`is_public` -- true/false, get public or private services only.\n\n- Two signals will be fired after a service is added.\n- One for adding Service in Kong\n- second for Register the Service for User on AM server if obj.assign_to_user is True\n\n- No Service can be updated once added,", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "This UUID will uniquely identify every registered service.", "type": "string", "in": "path"}]}}}}, "is_public": false, "created_at": "2017-05-31T12:54:41.912Z", "modified_at": "2017-07-13T06:37:38.764Z"}}, {"model": "service_vault.servicevault", "pk": 53, "fields": {"name": "NoAppTemplates", "description": "Service that manages templates required across platforms", "uuid": "f103651f-2132-403f-be48-a86a1c38559c", "request_host": "templates.veris.in", "upstream_url": "http://192.168.10.222:8018", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "local.veris.in:8018", "swagger": "2.0", "info": {"version": "", "title": "Template Service API"}, "paths": {"/micro-service/templates/{uuid}/": {"patch": {"tags": ["templates"], "summary": "Template Viewset, every authorization http request handles by this class", "operationId": "update", "consumes": ["application/json"], "description": "Template Viewset, every authorization http request handles by this class", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"properties": {"schema": {"description": "", "type": "string"}, "name": {"description": "Template Name.", "type": "string"}, "description": {"description": "Template Description.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["templates"], "summary": "Template Viewset, every authorization http request handles by this class", "operationId": "read", "description": "Template Viewset, every authorization http request handles by this class", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "Non-editable, to be generated by system itself.", "type": "string", "in": "path"}]}}, "/micro-service/templates/": {"post": {"tags": ["templates"], "summary": "Template Viewset, every authorization http request handles by this class", "operationId": "create", "consumes": ["application/json"], "description": "Template Viewset, every authorization http request handles by this class", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["name", "description", "schema"], "properties": {"schema": {"description": "", "type": "string"}, "name": {"description": "Template Name.", "type": "string"}, "description": {"description": "Template Description.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["templates"], "summary": "Template Viewset, every authorization http request handles by this class", "operationId": "list", "description": "Template Viewset, every authorization http request handles by this class", "responses": {"200": {"description": ""}}, "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}}}, "is_public": false, "created_at": "2017-06-01T06:50:03.844Z", "modified_at": "2017-07-13T06:37:34.081Z"}}, {"model": "service_vault.servicevault", "pk": 54, "fields": {"name": "NoAppApplications", "description": "Service that manages Apps, Widgets & Processes", "uuid": "9d6fe4a6-85b8-45b7-93eb-b9a77787a72b", "request_host": "apis.veris.in", "upstream_url": "http://172.18.0.1:8000", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "localhost:8000", "swagger": "2.0", "info": {"version": "", "title": "Veris API"}, "paths": {"/api/v1/widgets/system/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["widgets"], "operationId": "widgets_system", "parameters": []}}, "/api/v1/sessions/{uuid}/read/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_read", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/revision/{id}/": {"get": {"tags": ["revision"], "summary": "ViewSet for ``Revision`` model.", "operationId": "revision_read", "description": "ViewSet for ``Revision`` model.", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this revision.", "type": "integer", "in": "path"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_partial_update", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_sessions_delete", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_update", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/widgets/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["widgets"], "operationId": "widgets_partial_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"properties": {"description": {"description": "", "type": "string"}, "data": {"description": "Widget Data, the data to be filled by admin, using admin widget designed by developer", "type": "string"}, "process_locker_uuid": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "index": {"description": "", "type": "integer"}, "process_locker_token": {"description": "Token of Process Locker to which will be loaded when a Widget is called.", "type": "string"}, "template": {"description": "Widget Template, the list of components with their layout & styles", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["widgets"], "operationId": "widgets_delete", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["widgets"], "operationId": "widgets_read", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["widgets"], "operationId": "widgets_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["name"], "properties": {"description": {"description": "", "type": "string"}, "data": {"description": "Widget Data, the data to be filled by admin, using admin widget designed by developer", "type": "string"}, "process_locker_uuid": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "index": {"description": "", "type": "integer"}, "process_locker_token": {"description": "Token of Process Locker to which will be loaded when a Widget is called.", "type": "string"}, "template": {"description": "Widget Template, the list of components with their layout & styles", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{uuid})/widgets/{widget_uuid})/{action})/": {"post": {"responses": {"201": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_widgets_create", "parameters": [{"required": true, "name": "widget_uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "action", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/runtimes/{runtime_uuid}/widgets/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_widgets_list", "parameters": [{"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/sessions/{uuid}/history/": {"get": {"tags": ["sessions"], "summary": "gets the history of a particular instance", "operationId": "sessions_history", "description": "gets the history of a particular instance\n\n:param request:\n:param pk:\n:return:", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}]}}, "/api/v1/version/": {"get": {"tags": ["version"], "summary": "List all the versions of all the objects in the database.", "operationId": "version_list", "description": "List all the versions of all the objects in the database.", "responses": {"200": {"description": ""}}, "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/cancel/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_cancel", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{runtime_uuid}/widgets/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_widgets_partial_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"properties": {"description": {"description": "", "type": "string"}, "data": {"description": "Widget Data, the data to be filled by admin, using admin widget designed by developer", "type": "string"}, "process_locker_uuid": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "index": {"description": "", "type": "integer"}, "process_locker_token": {"description": "Token of Process Locker to which will be loaded when a Widget is called.", "type": "string"}, "template": {"description": "Widget Template, the list of components with their layout & styles", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_widgets_delete", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_widgets_read", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_widgets_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["name"], "properties": {"description": {"description": "", "type": "string"}, "data": {"description": "Widget Data, the data to be filled by admin, using admin widget designed by developer", "type": "string"}, "process_locker_uuid": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "index": {"description": "", "type": "integer"}, "process_locker_token": {"description": "Token of Process Locker to which will be loaded when a Widget is called.", "type": "string"}, "template": {"description": "Widget Template, the list of components with their layout & styles", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/processes/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["processes"], "operationId": "processes_create", "parameters": [{"schema": {"required": ["schema", "name"], "properties": {"schema": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "type": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["processes"], "operationId": "processes_list", "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/feedbacks/{id}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["feedbacks"], "operationId": "feedbacks_partial_update", "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}, {"schema": {"properties": {"app": {"description": "", "type": "string"}, "comment": {"description": "", "type": "string"}, "rating": {"description": "", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["feedbacks"], "operationId": "feedbacks_delete", "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["feedbacks"], "operationId": "feedbacks_read", "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["feedbacks"], "operationId": "feedbacks_update", "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}, {"schema": {"required": ["app"], "properties": {"app": {"description": "", "type": "string"}, "comment": {"description": "", "type": "string"}, "rating": {"description": "", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{runtime_uuid}/widgets/system/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_widgets_system", "parameters": [{"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/runtimes/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_partial_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"properties": {"widget_locker_token": {"description": "Token of Widget Locker to which will be loaded when a runtime is called.", "type": "string"}, "logo": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "widget_locker_uuid": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_delete", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_read", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["name"], "properties": {"widget_locker_token": {"description": "Token of Widget Locker to which will be loaded when a runtime is called.", "type": "string"}, "logo": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "widget_locker_uuid": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/feedbacks/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["feedbacks"], "operationId": "feedbacks_create", "parameters": [{"schema": {"required": ["app"], "properties": {"app": {"description": "", "type": "string"}, "comment": {"description": "", "type": "string"}, "rating": {"description": "", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["feedbacks"], "operationId": "feedbacks_list", "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/revision/": {"get": {"tags": ["revision"], "summary": "ViewSet for ``Revision`` model.", "operationId": "revision_list", "description": "ViewSet for ``Revision`` model.", "responses": {"200": {"description": ""}}, "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/processes/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["processes"], "operationId": "processes_partial_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"properties": {"schema": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "type": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["processes"], "operationId": "processes_delete", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["processes"], "operationId": "processes_read", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["processes"], "operationId": "processes_update", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["schema", "name"], "properties": {"schema": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "type": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/history/": {"get": {"tags": ["runtimes"], "summary": "gets the history of a particular instance", "operationId": "runtimes_sessions_history", "description": "gets the history of a particular instance\n\n:param request:\n:param pk:\n:return:", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/sessions/{uuid}/success/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_success", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{app_uuid}/feedbacks/{id}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_feedbacks_partial_update", "parameters": [{"required": true, "name": "app_uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}, {"schema": {"properties": {"app": {"description": "", "type": "string"}, "comment": {"description": "", "type": "string"}, "rating": {"description": "", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_feedbacks_delete", "parameters": [{"required": true, "name": "app_uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_feedbacks_read", "parameters": [{"required": true, "name": "app_uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_feedbacks_update", "parameters": [{"required": true, "name": "app_uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "id", "description": "A unique integer value identifying this feedback.", "type": "integer", "in": "path"}, {"schema": {"required": ["app"], "properties": {"app": {"description": "", "type": "string"}, "comment": {"description": "", "type": "string"}, "rating": {"description": "", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/read/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_read", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/success/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_success", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/sessions/{uuid}/": {"patch": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_partial_update", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"responses": {"204": {"description": ""}}, "tags": ["sessions"], "operationId": "sessions_delete", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}]}, "put": {"responses": {"200": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_update", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/version/{id}/": {"get": {"tags": ["version"], "summary": "List all the versions of all the objects in the database.", "operationId": "version_read", "description": "List all the versions of all the objects in the database.", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this version.", "type": "integer", "in": "path"}]}}, "/api/v1/runtimes/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_create", "parameters": [{"schema": {"required": ["name"], "properties": {"widget_locker_token": {"description": "Token of Widget Locker to which will be loaded when a runtime is called.", "type": "string"}, "logo": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "widget_locker_uuid": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_list", "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/processes/{uuid}/server/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["processes"], "operationId": "processes_server", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/sessions/{uuid}/cancel/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_cancel", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/sessions/{uuid}/write/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_write", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/api/v1/processes/{uuid}/schema/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["processes"], "operationId": "processes_schema", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/widgets/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["widgets"], "operationId": "widgets_list", "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/version/{id}/revert/": {"get": {"tags": ["version"], "summary": "revert to the version specified", "operationId": "version_revert", "description": "revert to the version specified\n\n:param request:\n:param pk:\n:return:", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this version.", "type": "integer", "in": "path"}]}}, "/api/v1/processes/{uuid}/client/": {"get": {"responses": {"200": {"description": ""}}, "tags": ["processes"], "operationId": "processes_client", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/sessions/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["sessions"], "operationId": "sessions_create", "parameters": [{"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["sessions"], "operationId": "sessions_list", "parameters": [{"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_create", "parameters": [{"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_sessions_list", "parameters": [{"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/runtimes/{app_uuid}/feedbacks/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_feedbacks_create", "parameters": [{"required": true, "name": "app_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["app"], "properties": {"app": {"description": "", "type": "string"}, "comment": {"description": "", "type": "string"}, "rating": {"description": "", "type": "integer"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["runtimes"], "operationId": "runtimes_feedbacks_list", "parameters": [{"required": true, "name": "app_uuid", "description": "", "type": "string", "in": "path"}, {"required": false, "name": "limit", "description": "Number of results to return per page.", "type": "integer", "in": "query"}, {"required": false, "name": "offset", "description": "The initial index from which to return the results.", "type": "integer", "in": "query"}, {"required": false, "name": "ordering", "description": "Which field to use when ordering the results.", "type": "string", "in": "query"}, {"required": false, "name": "search", "description": "A search term.", "type": "string", "in": "query"}]}}, "/api/v1/processes/{uuid}/execute/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["processes"], "operationId": "processes_execute_create", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["schema", "name"], "properties": {"schema": {"description": "", "type": "string"}, "name": {"description": "", "type": "string"}, "description": {"description": "", "type": "string"}, "type": {"description": "", "type": "string"}, "uuid": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "tags": ["processes"], "operationId": "processes_execute_read", "parameters": [{"required": true, "name": "uuid", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/widgets/{widget_uuid})/{action})/": {"post": {"responses": {"201": {"description": ""}}, "tags": ["widgets"], "operationId": "widgets_create", "parameters": [{"required": true, "name": "widget_uuid", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "action", "description": "", "type": "string", "in": "path"}]}}, "/api/v1/runtimes/{runtime_uuid}/sessions/{uuid}/write/": {"post": {"responses": {"201": {"description": ""}}, "consumes": ["application/json"], "tags": ["runtimes"], "operationId": "runtimes_sessions_write", "parameters": [{"required": true, "name": "uuid", "description": "A unique identifier for each Session along with Runtime. Non-editable, to be generated by system itself.", "type": "string", "in": "path"}, {"required": true, "name": "runtime_uuid", "description": "", "type": "string", "in": "path"}, {"schema": {"required": ["runtime"], "properties": {"runtime": {"description": "", "type": "string"}, "data": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-06-01T08:47:03.526Z", "modified_at": "2017-07-13T06:37:27.682Z"}}, {"model": "service_vault.servicevault", "pk": 55, "fields": {"name": "NoAppAuthorization", "description": "Authorization Server", "uuid": "31ddde15-4b88-41ac-a5fc-af9841cc0690", "request_host": "am.veris.in", "upstream_url": "http://192.168.10.222:8013", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "local.veris.in:8013", "swagger": "2.0", "info": {"version": "", "title": "Authorization (AM SerVer)"}, "paths": {"/micro-service/am/policy/list/": {"get": {"tags": ["policy"], "summary": ":param source: source", "operationId": "list_source_policy", "description": ":param source: source\n:return: source resources.", "responses": {"200": {"description": ""}}, "parameters": []}}, "/micro-service/am/policy/": {"post": {"tags": ["policy"], "summary": "Authorization Viewset, every authorization http request handles by this class", "operationId": "create", "consumes": ["application/json"], "description": "Authorization Viewset, every authorization http request handles by this class", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["source", "source_permission_set"], "properties": {"source_permission_set": {"items": {"type": "string"}, "type": "array", "description": ""}, "source": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/micro-service/am/policy/validate/": {"post": {"tags": ["policy"], "summary": "check authorization w.r.t target", "operationId": "validate_policy_permission", "consumes": ["application/json"], "description": "check authorization w.r.t target", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["source", "source_permission_set"], "properties": {"source_permission_set": {"items": {"type": "string"}, "type": "array", "description": ""}, "source": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/micro-service/am/policy/{id}/": {"get": {"tags": ["policy"], "summary": "Authorization Viewset, every authorization http request handles by this class", "operationId": "read", "description": "Authorization Viewset, every authorization http request handles by this class", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "id", "description": "A unique integer value identifying this Authorization Policy.", "type": "integer", "in": "path"}]}}, "/micro-service/am/policy/{source_pk}/{perm_pk}/": {"patch": {"tags": ["policy"], "summary": "Policy Permission set will be updated here", "operationId": "partial_update", "consumes": ["application/json"], "description": "Policy Permission set will be updated here\n\n:param request:\n:param source_pk: policy pk\n:param perm_pk: policy permission pk\n:return: permission set", "responses": {"200": {"description": ""}}, "parameters": [{"required": true, "name": "perm_pk", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "source_pk", "description": "", "type": "string", "in": "path"}, {"schema": {"properties": {"source_permission_set": {"items": {"type": "string"}, "type": "array", "description": ""}, "source": {"description": "", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}, "delete": {"tags": ["policy"], "summary": "Policy Permission set will be deleted here", "operationId": "delete", "description": "Policy Permission set will be deleted here\n\n:param request:\n:param source_pk: policy pk\n:param perm_pk: policy permission pk\n:return: permission set", "responses": {"204": {"description": ""}}, "parameters": [{"required": true, "name": "perm_pk", "description": "", "type": "string", "in": "path"}, {"required": true, "name": "source_pk", "description": "", "type": "string", "in": "path"}]}}}}, "is_public": false, "created_at": "2017-06-05T07:08:57.895Z", "modified_at": "2017-07-13T06:37:23.138Z"}}, {"model": "service_vault.servicevault", "pk": 58, "fields": {"name": "NoAppMedia", "description": "Media Storage Service", "uuid": "afca2963-c483-4967-a71b-33cc7687369c", "request_host": "media.noapp.mobi", "upstream_url": "https://pictshare.net", "swagger_schema": {"schemes": ["http", "https"], "securityDefinitions": {"basic": {"type": "basic"}}, "host": "media.noapp.mobi", "swagger": "2.0", "info": {"version": "1.0", "title": "V3 Media"}, "paths": {"/backend.php": {"post": {"summary": "", "operationId": "image_upload", "consumes": ["multipart/form-data"], "description": "", "responses": {"200": {"description": ""}}, "parameters": [{"name": "postimage", "description": "image to upload", "type": "file", "in": "formData"}]}}}}, "is_public": false, "created_at": "2017-06-08T09:44:25.018Z", "modified_at": "2017-07-13T06:37:18.276Z"}}, {"model": "service_vault.servicevault", "pk": 59, "fields": {"name": "NoAppWorkflows", "description": "Manage workflows", "uuid": "f3a94037-ad82-4f3c-9237-eb71c98aff6e", "request_host": "workflows.noapp.mobi", "upstream_url": "http://workflows.noapp.mobi", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "definitions": {"execution": {"properties": {"state": {"description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "description": {"description": "description of workflow execution", "type": "string"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "task_execution_id": {"description": "reference to the parent task execution", "type": "string"}, "workflow_id": {"description": "reference to workflow ID", "type": "string"}, "output": {"description": "output is a workflow output", "type": "object"}, "workflow_name": {"description": "reference to workflow definition", "type": "string"}, "state_info": {"description": "an optional state information string", "type": "string"}}}, "workflow": {"properties": {"updated_at": {"description": "", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "created_at": {"description": "description of workflow", "type": "string"}, "definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}}}}, "host": "0.0.0.0:8989", "swagger": "2.0", "info": {"version": "2.0", "title": "Mistral API"}, "paths": {"/v2/workflows/": {"post": {"tags": ["workflows"], "summary": "Create a mistral workflow", "operationId": "workflow_create", "consumes": ["application/json"], "description": "Create a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["name", "input"], "properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["workflows"], "summary": "List mistral workflows", "operationId": "workflow_create", "consumes": ["application/json"], "description": "List mistral workflows", "responses": {"201": {"description": ""}}, "parameters": [{"required": false, "name": "marker", "type": "string", "in": "query"}, {"required": false, "name": "limit", "type": "string", "in": "query"}, {"required": false, "name": "fields", "type": "string", "in": "query"}, {"required": false, "name": "name", "type": "string", "in": "query"}, {"required": false, "name": "definition", "type": "string", "in": "query"}, {"required": false, "name": "project_id", "type": "string", "in": "query"}, {"required": false, "name": "tags", "type": "string", "in": "query"}]}}, "/v2/workflows/{identifier}": {"delete": {"tags": ["workflows"], "summary": "Delete a mistral workflow", "operationId": "workflow_delete", "consumes": ["application/json"], "description": "Delete a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}, {"schema": {"properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["workflows"], "summary": "Retrieve a mistral workflow", "operationId": "workflow_get", "consumes": ["application/json"], "description": "Retrieve a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}]}, "put": {"tags": ["workflows"], "summary": "Update a mistral workflow", "operationId": "workflow_update", "consumes": ["application/json"], "description": "Update a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}, {"schema": {"properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/v2/executions/": {"post": {"tags": ["executions"], "summary": "Execute a mistral workflow or action", "operationId": "execution_create", "consumes": ["application/json"], "description": "Execute a mistral workflow or action", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["input"], "properties": {"state": {"description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "description": {"description": "description of workflow execution", "type": "string"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "task_execution_id": {"description": "reference to the parent task execution", "type": "string"}, "workflow_id": {"description": "reference to workflow ID", "type": "string"}, "output": {"description": "output is a workflow output", "type": "object"}, "workflow_name": {"description": "reference to workflow definition", "type": "string"}, "state_info": {"description": "an optional state information string", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-06-15T12:53:34.686Z", "modified_at": "2017-07-13T06:37:13.939Z"}}, {"model": "service_vault.servicevault", "pk": 60, "fields": {"name": "Workflows", "description": "handle workflows", "uuid": "813bf08a-04ef-4d04-b284-83f9f2961c7a", "request_host": "wf.noapp.mobi", "upstream_url": "http://workflows.noapp.mobi", "swagger_schema": {"schemes": ["http"], "securityDefinitions": {"basic": {"type": "basic"}}, "definitions": {"execution": {"properties": {"state": {"description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "description": {"description": "description of workflow execution", "type": "string"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "task_execution_id": {"description": "reference to the parent task execution", "type": "string"}, "workflow_id": {"description": "reference to workflow ID", "type": "string"}, "output": {"description": "output is a workflow output", "type": "object"}, "workflow_name": {"description": "reference to workflow definition", "type": "string"}, "state_info": {"description": "an optional state information string", "type": "string"}}}, "workflow": {"properties": {"updated_at": {"description": "", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "created_at": {"description": "description of workflow", "type": "string"}, "definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}}}}, "host": "0.0.0.0:8989", "swagger": "2.0", "info": {"version": "2.0", "title": "Mistral API"}, "paths": {"/v2/workflows/": {"post": {"tags": ["workflows"], "summary": "Create a mistral workflow", "operationId": "workflow_create", "consumes": ["application/json"], "description": "Create a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["name", "input"], "properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["workflows"], "summary": "List mistral workflows", "operationId": "workflow_create", "consumes": ["application/json"], "description": "List mistral workflows", "responses": {"201": {"description": ""}}, "parameters": [{"required": false, "name": "marker", "type": "string", "in": "query"}, {"required": false, "name": "limit", "type": "string", "in": "query"}, {"required": false, "name": "fields", "type": "string", "in": "query"}, {"required": false, "name": "name", "type": "string", "in": "query"}, {"required": false, "name": "definition", "type": "string", "in": "query"}, {"required": false, "name": "project_id", "type": "string", "in": "query"}, {"required": false, "name": "tags", "type": "string", "in": "query"}]}}, "/v2/workflows/{identifier}": {"delete": {"tags": ["workflows"], "summary": "Delete a mistral workflow", "operationId": "workflow_delete", "consumes": ["application/json"], "description": "Delete a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}, {"schema": {"properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"tags": ["workflows"], "summary": "Retrieve a mistral workflow", "operationId": "workflow_get", "consumes": ["application/json"], "description": "Retrieve a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}]}, "put": {"tags": ["workflows"], "summary": "Update a mistral workflow", "operationId": "workflow_update", "consumes": ["application/json"], "description": "Update a mistral workflow", "responses": {"201": {"description": ""}}, "parameters": [{"required": true, "name": "identifier", "type": "string", "in": "path"}, {"schema": {"properties": {"definition": {"description": "Workflow definition in Mistral v2 DSL", "type": "string"}, "tags": {"description": "reference to workflow ID", "type": "array"}, "project_id": {"description": "The same as the requester project_id or different if the scope is public.", "type": "string"}, "scope": {"description": "state can be one of: private or public", "type": "string"}, "name": {"description": "name of workflow", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/v2/executions/": {"post": {"tags": ["executions"], "summary": "Execute a mistral workflow or action", "operationId": "execution_create", "consumes": ["application/json"], "description": "Execute a mistral workflow or action", "responses": {"201": {"description": ""}}, "parameters": [{"schema": {"required": ["input"], "properties": {"state": {"description": "state can be one of: IDLE, RUNNING, SUCCESS, ERROR, PAUSED", "type": "string"}, "input": {"description": "input is a JSON structure containing workflow input values", "type": "object"}, "description": {"description": "description of workflow execution", "type": "string"}, "id": {"description": "id is immutable and auto assigned", "type": "string"}, "task_execution_id": {"description": "reference to the parent task execution", "type": "string"}, "workflow_id": {"description": "reference to workflow ID", "type": "string"}, "output": {"description": "output is a workflow output", "type": "object"}, "workflow_name": {"description": "reference to workflow definition", "type": "string"}, "state_info": {"description": "an optional state information string", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-06-15T12:56:48.237Z", "modified_at": "2017-06-15T12:56:48.237Z"}}, {"model": "service_vault.servicevault", "pk": 61, "fields": {"name": "GoogleAPIs", "description": "Google APIs - Calendar Resource, Events", "uuid": "e4c99c51-7c31-494a-be40-f8c9e180bb84", "request_host": "www.googleapis.com", "upstream_url": "https://www.googleapis.com", "swagger_schema": {"schemes": ["https"], "securityDefinitions": {"events_oauth": {"scopes": {"https://www.googleapis.com/auth/calendar": "read write calendar"}, "type": "oauth2", "flow": "implicit", "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth"}, "resource_oauth": {"scopes": {"https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly": "read resource calendars", "https://www.googleapis.com/auth/admin.directory.resource.calendar": "manage resource calendars"}, "type": "oauth2", "flow": "implicit", "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth"}}, "definitions": {"Date": {"properties": {"date": {"type": "string"}, "timeZone": {"type": "string"}, "dateTime": {"type": "string"}}, "description": "", "type": "object"}, "Attendee": {"required": ["email"], "properties": {"organizer": {"type": "boolean"}, "email": {"description": "The attendees email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.", "type": "string"}}, "description": "ok", "type": "object"}, "Event": {"properties": {"attendees": {"items": {"$ref": "#/definitions/Attendee"}, "type": "array"}}, "description": "", "type": "object"}}, "host": "www.googleapis.com", "produces": ["application/json", "application/x-www-form-urlencoded"], "swagger": "2.0", "info": {"version": "3.0.0", "title": "Google Calendar APIs", "description": "The APIs for handling calendar events & resources."}, "consumes": ["application/json", "application/x-www-form-urlencoded"], "paths": {"/admin/directory/v1/customer/{customer}/resources/calendars": {"post": {"responses": {"201": {"description": ""}}, "description": "create a new calendar resource", "tags": ["Resources"], "operationId": "create_resource", "parameters": [{"required": true, "name": "customer", "description": "The unique ID for the customers Google account. As an account administrator, you can also use the my_customer alias to represent your accounts customer ID.", "type": "string", "in": "path"}, {"schema": {"required": ["resourceId", "resourceName"], "properties": {"resourceDescription": {"description": "The brief description of the calendar resource.", "type": "string"}, "resourceId": {"description": "The unique ID for the calendar resource.", "type": "string"}, "resourceName": {"description": "The name of the calendar resource. For example, Training Room 1A", "type": "string"}, "resourceType": {"description": "The type of the calendar resource. Used for grouping resources in the calendar user interface.", "type": "string"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/calendar/v3/calendars/{calendarId}/events": {"post": {"responses": {"201": {"description": ""}}, "description": "creates a new event", "tags": ["Events"], "operationId": "create_event", "parameters": [{"required": true, "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "type": "string", "in": "path"}, {"schema": {"required": ["attendees", "start", "end"], "properties": {"start": {"description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}, "attendees": {"items": {"$ref": "#/definitions/Attendee"}, "type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users."}, "end": {"description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "description": "creates a new event", "tags": ["Events"], "operationId": "list_events", "parameters": [{"required": true, "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "type": "string", "in": "path"}, {"schema": {"required": ["attendees", "start", "end"], "properties": {"start": {"description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}, "attendees": {"items": {"$ref": "#/definitions/Attendee"}, "type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users."}, "end": {"description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}}, "type": "object"}, "name": "data", "in": "body"}]}}, "/calendar/v3/calendars/{calendarId}/events/{eventId}": {"delete": {"responses": {"200": {"description": ""}}, "description": "delete an event", "tags": ["Events"], "operationId": "delete_event", "parameters": [{"required": true, "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "type": "string", "in": "path"}, {"required": true, "name": "eventId", "description": "Event identifier.", "type": "string", "in": "path"}, {"schema": {"required": ["attendees", "start", "end"], "properties": {"start": {"description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}, "attendees": {"items": {"$ref": "#/definitions/Attendee"}, "type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users."}, "end": {"description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}}, "type": "object"}, "name": "data", "in": "body"}]}, "get": {"responses": {"200": {"description": ""}}, "description": "retrieve an existing event", "tags": ["Events"], "operationId": "get_event", "parameters": [{"required": true, "name": "calendarId", "description": "Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the \"primary\" keyword.", "type": "string", "in": "path"}, {"required": true, "name": "eventId", "description": "Event identifier.", "type": "string", "in": "path"}, {"schema": {"required": ["attendees", "start", "end"], "properties": {"start": {"description": "The (inclusive) start time of the event. For a recurring event, this is the start time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}, "attendees": {"items": {"$ref": "#/definitions/Attendee"}, "type": "array", "description": "The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users."}, "end": {"description": "The (exclusive) end time of the event. For a recurring event, this is the end time of the first instance.", "type": "object", "$ref": "#/definitions/Date"}}, "type": "object"}, "name": "data", "in": "body"}]}}}}, "is_public": false, "created_at": "2017-06-21T11:53:49.506Z", "modified_at": "2017-07-13T06:38:33.367Z"}}, {"model": "service_vault.servicevault", "pk": 62, "fields": {"name": "Picture Upload", "description": "uploads picture to pictshare.net and returns it's url", "uuid": "53df72b9-684c-458c-b5d0-a06a1f1266f0", "request_host": "pictshare.net", "upstream_url": "https://pictshare.net/backend.php/", "swagger_schema": {"schemes": ["https"], "host": "pictshare.net", "swagger": "2.0", "info": {"version": "0.1", "title": "Picture Upload"}, "basePath": "/backend.php", "paths": {"/": {"post": {"summary": "Upload a picture", "produces": ["application/json"], "operationId": "uploadPicture", "consumes": ["multipart/form-data"], "description": "Upload a picture to pictshare.net and get url of that pic in return", "responses": {"405": {"description": "Invalid input"}}, "parameters": [{"required": true, "name": "postimage", "type": "file", "in": "formData"}]}}}}, "is_public": false, "created_at": "2017-06-22T10:42:41.632Z", "modified_at": "2017-06-30T11:15:09.774Z"}}, {"model": "service_vault.servicevault", "pk": 63, "fields": {"name": "Zomato", "description": "zomato food app", "uuid": "69aabf04-8fa9-455a-a690-defcf50ceb86", "request_host": "zomato.com", "upstream_url": "http://www.zomato.com", "swagger_schema": {"schemes": ["https"], "securityDefinitions": {"petstore_auth": {"scopes": {"read:pets": "read your pets", "write:pets": "modify pets in your account"}, "type": "oauth2", "flow": "implicit", "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog"}, "api_key": {"name": "api_key", "type": "apiKey", "in": "header"}}, "tags": [{"externalDocs": {"description": "Find out more", "url": "http://www.zomato.com"}, "name": "Common", "description": "common"}, {"name": "Restaurant", "description": "restaurant"}, {"name": "Location", "description": "location"}], "host": "virtserver.swaggerhub.com", "definitions": {"Categories": {"xml": {"name": "Categories"}, "required": ["category_id", "category_name"], "type": "object", "properties": {"category_name": {"description": "Name of the category type", "type": "string", "example": "Nightlife"}, "category_id": {"description": "ID of the category type", "type": "integer", "example": "3"}}}, "Photo": {"properties": {"height": {"description": "Image height in pixel; usually 640", "type": "integer", "example": "640"}, "user": {"description": "User who uploaded the photo", "type": "object", "$ref": "#/definitions/User"}, "caption": {"description": "Caption of the photo", "type": "string", "example": "#awesome"}, "likes_count": {"description": "Number of likes on photo", "type": "integer", "example": "0"}, "thumb_url": {"description": "URL for 200 X 200 thumb image file", "type": "string", "example": "https://b.zmtcdn.com/data/reviews_photos/c15/9eb13ceaf6e90129c276ce6ff980bc15_1435111695_200_thumb.JPG"}, "comments_count": {"description": "Number of comments on photo", "type": "integer", "example": "0"}, "width": {"description": "Image width in pixel; usually 640", "type": "integer", "example": "640"}, "timestamp": {"description": "Unix timestamp when the photo was uploaded", "type": "integer", "example": "1435111770"}, "id": {"description": "ID of the photo", "type": "string", "example": "u_MjA5MjY1OTk5OT"}, "url": {"description": "URL of the image file", "type": "string", "example": "https://b.zmtcdn.com/data/reviews_photos/c15/9eb13ceaf6e90129c276ce6ff980bc15_1435111695_640_640_thumb.JPG"}, "friendly_time": {"description": "User friendly time string; denotes when the photo was uploaded", "type": "string", "example": "3 months ago"}, "res_id": {"description": "ID of restaurant for which the image was uploaded", "type": "integer", "example": "16782899"}}, "type": "object"}, "DailyMenuCategory": {"properties": {"start_date": {"description": "Daily Menu start timestamp", "type": "string", "example": "2016-03-08 11:00"}, "name": {"description": "Name of the restaurant", "type": "string", "example": "Vinohradsk\u00c3\u00bd pivovar"}, "daily_menu_id": {"description": "ID of the restaurant", "type": "integer", "example": "16507624"}, "end_date": {"description": "Daily Menu end timestamp", "type": "string", "example": "2016-03-08 15:00"}, "dishes": {"items": {"$ref": "#/definitions/DailyMenuItem"}, "type": "array", "description": "Menu item in the category"}}, "type": "object"}, "Cuisine": {"xml": {"name": "Cuisine"}, "required": ["cuisine_id", "cuisine_name"], "type": "object", "properties": {"cuisine_name": {"description": "Name of the cuisine", "type": "string", "example": "Chinese"}, "cuisine_id": {"description": "ID of the cuisine", "type": "integer", "example": "25"}}}, "Review": {"properties": {"review_time_friendly": {"description": "User friendly time string corresponding to time of review posting", "type": "string", "example": "2 months ago"}, "timestamp": {"description": "Unix timestamp for review_time_friendly", "type": "integer", "example": "1435507367"}, "user": {"description": "User details of author of review", "type": "object", "$ref": "#/definitions/User"}, "id": {"description": "ID of the review", "type": "integer", "example": "24127336"}, "rating": {"description": "Rating on scale of 0 to 5 in increments of 0.5", "type": "number", "example": "5"}, "comments_count": {"description": "No of comments on review", "type": "integer", "example": "0"}, "likes": {"description": "No of likes received for review", "type": "integer", "example": "0"}, "rating_color": {"description": "Color hex code used with the rating on Zomato", "type": "string", "example": "305D02"}, "review_text": {"description": "Review text", "type": "string", "example": "The best latte I've ever had. It tasted a little sweet"}, "rating_text": {"description": "Short description of the rating", "type": "string", "example": "Insane!"}}, "type": "object"}, "Collection": {"xml": {"name": "Collection"}, "properties": {"share_url": {"description": "short URL for apps and social sharing", "type": "string", "example": "http://www.zoma.to/c-280/1"}, "title": {"description": "Collection name", "type": "string", "example": "Trending this week"}, "url": {"description": "URL of the collection page", "type": "string", "example": "https://www.zomato.com/new-york-city/top-restaurants"}, "res_count": {"description": "Number of restaurants in the collection", "type": "integer", "example": "30"}, "collection_id": {"description": "ID of the collection of restaurants", "type": "integer", "example": "1"}, "description": {"description": "Short description of the collection", "type": "string", "example": "The most popular restaurants in town this week"}, "image_url": {"description": "URL for header image of the collection", "type": "string", "example": "https://b.zmtcdn.com/data/collections/e40960514831cb9b74c552d69eceee0f_1418387628_l.jpg"}}, "type": "object"}, "LocationDetails": {"properties": {"popularity": {"type": "object", "$ref": "#/definitions/Popularity"}, "location": {"description": "location struct", "type": "object", "$ref": "#/definitions/Location"}, "best_rated_restaurants": {"items": {"$ref": "#/definitions/RestaurantL3"}, "type": "array", "description": "list of top rated restaurants in location"}}, "type": "object"}, "DailyMenuItem": {"properties": {"name": {"description": "Menu Item Title", "type": "string", "example": "Tatar\u00c3\u00a1k ze sumce s toustem"}, "price": {"description": "Menu Item Price", "type": "string", "example": "149 K\u00c4\u008d"}, "dish_id": {"description": "Menu Item ID ", "type": "integer", "example": "104089345"}}, "type": "object"}, "DailyMenu": {"properties": {"daily_menu": {"items": {"$ref": "#/definitions/DailyMenuCategory"}, "type": "array", "description": " List of restaurant's menu details"}}, "type": "object"}, "UserRating": {"properties": {"aggregate_rating": {"description": "Restaurant rating on a scale of 0.0 to 5.0 in increments of 0.1", "type": "number", "example": "3.7"}, "votes": {"description": "Number of ratings received", "type": "integer", "example": "1046"}, "rating_text": {"description": "Short description of the rating", "type": "string", "example": "Very Good"}, "rating_color": {"description": "Color hex code used with the rating on Zomato", "type": "string", "example": "5BA829"}}, "type": "object"}, "RestaurantL3": {"allOf": [{"$ref": "#/definitions/Restaurant"}, {"properties": {"photo_count": {"description": "<b>[Partner access]</b> Total number of photos for the restaurant, at max 10 photos for partner access", "type": "integer", "example": "18"}, "all_reviews": {"items": {"$ref": "#/definitions/Review"}, "type": "array", "description": "<b>[Partner access]</b> List of restaurant reviews"}, "cuisines": {"description": "List of cuisines served at the restaurant in csv format", "type": "string", "example": "Cafe"}, "phone_numbers": {"description": "<b>[Partner access]</b> Restaurant's contact numbers in csv format", "type": "string", "example": "(212) 228-2930"}, "photos": {"items": {"$ref": "#/definitions/Photo"}, "type": "array", "description": "<b>[Partner access]</b> List of restaurant photos"}, "all_reviews_count": {"description": "<b>[Partner access]</b> Number of reviews for the restaurant", "type": "integer", "example": "15"}}, "type": "object"}]}, "Subzone": {"properties": {"name": {"description": "Name of the subzone", "type": "string", "example": "Saket"}, "zone_id": {"description": "ID of the zone where subzone lies", "type": "integer", "example": "4"}, "subzone_id": {"description": "ID of subzone", "type": "integer", "example": "23"}}, "type": "object"}, "Restaurant": {"properties": {"thumb": {"description": "URL of the low resolution header image of restaurant", "type": "string", "example": "https://b.zmtcdn.com/data/pictures/chains/8/16774318/a54deb9e4dbb79dd7c8091b30c642077_featured_thumb.png"}, "has_table_booking": {"description": "Whether the restaurant has table reservation enabled or not", "type": "boolean", "example": "0"}, "events_url": {"description": "URL of the restaurant's events page", "type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village/events#tabtop"}, "photos_url": {"description": "URL of the restaurant's photos page", "type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village/photos#tabtop"}, "url": {"description": "URL of the restaurant page", "type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village"}, "has_online_delivery": {"description": "Whether the restaurant has online delivery enabled or not", "type": "boolean", "example": "0"}, "average_cost_for_two": {"description": "Average price of a meal for two people", "type": "integer", "example": "60"}, "user_rating": {"description": "Restaurant rating details", "type": "object", "$ref": "#/definitions/UserRating"}, "menu_url": {"description": "URL of the restaurant's menu page", "type": "string", "example": "https://www.zomato.com/new-york-city/otto-enoteca-pizzeria-greenwich-village/menu#tabtop"}, "price_range": {"description": "Price bracket of the restaurant (1 being pocket friendly and 4 being the costliest)", "type": "integer", "example": "2"}, "id": {"description": "ID of the restaurant", "type": "integer", "example": "16774318"}, "currency": {"description": "Local currency symbol; to be used with price", "type": "string", "example": "$"}, "featured_image": {"description": "URL of the high resolution header image of restaurant", "type": "string", "example": "https://d.zmtcdn.com/data/pictures/chains/8/16774318/a54deb9e4dbb79dd7c8091b30c642077_featured_v2.png"}, "location": {"description": "Restaurant location details", "type": "object", "$ref": "#/definitions/ResLocation"}, "is_delivering_now": {"description": "Valid only if has_online_delivery = 1; whether the restaurant is accepting online orders right now", "type": "boolean", "example": "0"}, "name": {"description": "Name of the restaurant", "type": "string", "example": "Otto Enoteca & Pizzeria"}, "deeplink": {"description": "Short URL of the restaurant page; for use in apps or social shares", "type": "string", "example": "zomato://r/16774318"}}, "type": "object"}, "Tag": {"xml": {"name": "Tag"}, "properties": {"name": {"type": "string"}, "id": {"type": "integer", "format": "int64"}}, "type": "object"}, "Locality": {"xml": {"name": "Establishment"}, "required": ["name", "city_name"], "type": "object", "properties": {"real_city_name": {"description": "Actual city name; can be different from city_name in some cases", "type": "string", "example": "New York City"}, "name": {"description": "Name of locality (subzone)", "type": "string", "example": "Chelsea"}, "subzone_id": {"description": "ID of locality (subzone)", "type": "integer", "example": "114178"}, "city_name": {"description": "Name of city", "type": "string", "example": "New York City"}, "city_id": {"description": "ID of city; corresponds to city_name", "type": "integer", "example": "280"}}}, "PopularityLoc": {"allOf": [{"$ref": "#/definitions/Popularity"}, {"properties": {"nearby_restaurants": {"items": {"$ref": "#/definitions/RestaurantL3"}, "type": "array", "description": "popular restaurants around the provided coordinates"}, "link": {"description": "URL to web search page of locality", "type": "string", "example": "https://www.zomato.com/new-york-city/chelsea-restaurants"}}, "type": "object"}]}, "Zone": {"properties": {"name": {"description": "Name of the zone", "type": "string", "example": "South Delhi"}, "zone_id": {"description": "ID of zone", "type": "integer", "example": "31"}, "city_id": {"description": "ID of city where zone lies", "type": "integer", "example": "1"}}, "type": "object"}, "Search": {"properties": {"results_found": {"description": "Number of results found", "type": "integer", "example": "53"}, "results_shown": {"description": "The number of results fetched (used for pagination)", "type": "integer", "example": "10"}, "restaurants": {"items": {"$ref": "#/definitions/RestaurantL3"}, "type": "array"}, "results_start": {"description": "The starting location within results from which the results were fetched (used for pagination) ", "type": "integer", "example": "11"}}, "type": "object"}, "ResLocation": {"properties": {"zipcode": {"description": "Zipcode", "type": "string", "example": "10003"}, "longitude": {"description": "Coordinates of the restaurant", "type": "number", "example": "-73.996155"}, "country_id": {"description": "ID of the country", "type": "integer", "example": "216"}, "city": {"description": "Name of the city", "type": "string", "example": "New York City"}, "latitude": {"description": "Coordinates of the restaurant", "type": "number", "example": "40.732013"}, "address": {"description": "Complete address of the restaurant", "type": "string", "example": "1 5th Avenue, New York, NY 10003"}, "locality": {"description": "Name of the locality", "type": "string", "example": "Greenwich Village"}}, "type": "object"}, "Establishment": {"xml": {"name": "Establishment"}, "required": ["establishment_id", "establishment_name"], "type": "object", "properties": {"establishment_id": {"description": "ID of the establishment type", "type": "integer", "example": "31"}, "establishment_name": {"description": "Name of the establishment type", "type": "string", "example": "Bakery"}}}, "Location": {"properties": {"longitude": {"description": "Coordinates of the (centre of) location", "type": "number", "example": "-74.004821"}, "entity_id": {"description": "ID of location; (entity_id, entity_type) tuple uniquely identifies a location", "type": "integer", "example": "36932"}, "country_name": {"description": "Name of the country", "type": "string", "example": "United States"}, "title": {"description": "Name of the location", "type": "string", "example": "Chelsea Market, Chelsea, New York City"}, "city_name": {"description": "Name of the city", "type": "string", "example": "New York City"}, "city_id": {"description": "ID of city", "type": "integer", "example": "280"}, "entity_type": {"description": "Type of location; one of [city, zone, subzone, landmark, group, metro, street]", "type": "string", "example": "group"}, "latitude": {"description": "Coordinates of the (centre of) location", "type": "number", "example": "40.742051"}, "country_id": {"description": "ID of country", "type": "integer", "example": "216"}}, "type": "object"}, "User": {"properties": {"profile_image": {"description": "URL for user's profile image", "type": "string"}, "foodie_level_num": {"description": "Number to identify user's foodie level; ranges from 0 to 10", "type": "integer", "example": "9"}, "foodie_color": {"description": "Color hex code used with foodie level on Zomato", "type": "string", "example": "f58552"}, "zomato_handle": {"description": "User's @handle; uniquely identifies a user on Zomato", "type": "string", "example": "John"}, "profile_deeplink": {"description": "short URL for user's profile on Zomato; for use in apps or social sharing", "type": "string", "example": "zoma.to/u/1170245"}, "name": {"description": "User's name", "type": "string", "example": "John Doe"}, "profile_url": {"description": "URL for user's profile on Zomato", "type": "string", "example": "https://www.zomato.com/john"}, "foodie_level": {"description": "Text for user's foodie level", "type": "string", "example": "Super Foodie"}}, "type": "object"}, "ApiResponse": {"properties": {"message": {"type": "string"}, "type": {"type": "string"}, "code": {"type": "integer", "format": "int32"}}, "type": "object"}, "Pet": {"xml": {"name": "Pet"}, "required": ["name", "photoUrls"], "type": "object", "properties": {"tags": {"xml": {"name": "tag", "wrapped": true}, "items": {"$ref": "#/definitions/Tag"}, "type": "array"}, "id": {"type": "integer", "format": "int64"}, "status": {"enum": ["available", "pending", "sold"], "description": "pet status in the store", "type": "string"}, "name": {"type": "string", "example": "doggie"}, "photoUrls": {"xml": {"name": "photoUrl", "wrapped": true}, "items": {"type": "string"}, "type": "array"}, "category": {"$ref": "#/definitions/Category"}}}, "Popularity": {"xml": {"name": "Establishment"}, "required": ["popularity", "nightlife_index"], "type": "object", "properties": {"nightlife_index": {"description": "Nightlife index of a location out of 5.00", "type": "number", "example": "4.95"}, "popularity": {"description": "Foodie index of a location out of 5.00", "type": "number", "example": "4.92"}, "top_cuisines": {"items": {"type": "string", "example": "cafe"}, "type": "array", "description": "Most popular cuisines in the locality"}}}, "City": {"xml": {"name": "City"}, "required": ["id", "name"], "type": "object", "properties": {"state_id": {"description": "ID of the state", "type": "integer", "example": "103"}, "state_name": {"description": "Name of the state", "type": "string", "example": "New York State"}, "state_code": {"description": "Short code for the state", "type": "string", "example": "NY"}, "is_state": {"description": "Whether this location is a state", "type": "boolean", "example": "0"}, "id": {"description": "ID of the city", "type": "integer", "example": "280"}, "country_name": {"description": "Name of the country", "type": "string", "example": "United States"}, "name": {"description": "City name", "type": "string", "example": "New York City, NY"}, "country_id": {"description": "ID of the country", "type": "integer", "example": "216"}}}, "Order": {"xml": {"name": "Order"}, "properties": {"complete": {"default": false, "type": "boolean"}, "shipDate": {"type": "string", "format": "date-time"}, "id": {"type": "integer", "format": "int64"}, "petId": {"type": "integer", "format": "int64"}, "status": {"enum": ["placed", "approved", "delivered"], "description": "Order Status", "type": "string"}, "quantity": {"type": "integer", "format": "int32"}}, "type": "object"}, "Geocode": {"properties": {"popularity": {"type": "object", "$ref": "#/definitions/Popularity"}, "nearby_restaurants": {"items": {"$ref": "#/definitions/RestaurantL3"}, "type": "array", "description": "list of nearby restaurants"}, "locality": {"type": "object", "$ref": "#/definitions/Location"}, "link": {"description": "URL of the web search page of the locality", "type": "string", "example": "https://www.zomato.com/new-york-city/chelsea-restaurants"}}, "type": "object"}, "Category": {"xml": {"name": "Category"}, "properties": {"name": {"type": "string"}, "id": {"type": "integer", "format": "int64"}}, "type": "object"}}, "swagger": "2.0", "info": {"description": "Zomato Public API", "title": "Zomato API", "contact": {"email": "api@zomato.com"}, "version": "1.0.0", "termsOfService": "https://www.zomato.com/conditions", "license": {"name": "Apache 2.0\u00e5", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}}, "externalDocs": {"description": "See where your friends are dining", "url": "https://www.zomato.com"}, "basePath": "/veris-amoghbanta/Zomato/1.0.0", "paths": {"/geocode": {"get": {"tags": ["common"], "summary": "Get location details based on coordinates", "produces": ["application/json", "application/xml"], "operationId": "geocode", "description": "Get Foodie and Nightlife Index, list of popular cuisines and nearby restaurants around the given coordinates", "responses": {"200": {"schema": {"type": "object", "$ref": "#/definitions/Geocode"}, "description": "successful operation"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": true, "name": "lat", "description": "latitude", "type": "number", "in": "query"}, {"required": true, "name": "lon", "description": "longitude", "type": "number", "in": "query"}]}}, "/dailymenu": {"get": {"tags": ["restaurant"], "summary": "Get daily menu of a restaurant", "produces": ["application/json", "application/xml"], "operationId": "restaurant-daily", "description": "Get daily menu using Zomato restaurant ID.", "responses": {"200": {"schema": {"type": "object", "$ref": "#/definitions/DailyMenu"}, "description": "successful operation"}, "400": {"description": "Invalid res_id"}}, "parameters": [{"required": true, "name": "user_key", "description": "your API key", "type": "string", "in": "header"}, {"required": true, "name": "res_id", "description": "id of restaurant whose details are requested", "type": "integer", "in": "query"}]}}, "/restaurant": {"get": {"tags": ["restaurant"], "summary": "Get restaurant details", "produces": ["application/json", "application/xml"], "operationId": "restaurant", "description": "Get detailed restaurant information using Zomato restaurant ID. Partner Access is required to access photos and reviews.", "responses": {"200": {"schema": {"type": "object", "$ref": "#/definitions/RestaurantL3"}, "description": "successful operation"}, "400": {"description": "Invalid res_id"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": true, "name": "res_id", "description": "id of restaurant whose details are requested", "type": "integer", "in": "query"}]}}, "/establishments": {"get": {"tags": ["common"], "summary": "Get list of restaurant types in a city", "produces": ["application/xml", "application/json"], "operationId": "establishments", "description": "Get a list of restaurant types in a city. The location/City input can be provided in the following ways -<br><ol><li>Using Zomato City ID<li>Using coordinates of any location within a city</ol><p>List of all restaurants categorized under a particular restaurant type can  obtained using /Search API with Establishment ID and location details as inputs</p>", "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Establishment"}, "type": "array"}, "description": "successful operation"}, "403": {"description": "Invalid API key"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": false, "name": "city_id", "description": "id of the city", "type": "integer", "in": "query"}, {"required": false, "name": "lat", "description": "latitude / longitude of any point within a city", "type": "number", "in": "query"}, {"required": false, "name": "lon", "description": "latitude / longitude of any point within a city", "type": "number", "in": "query"}]}}, "/cuisines": {"get": {"tags": ["common"], "summary": "Get list of all cuisines in a city", "produces": ["application/json", "application/xml"], "operationId": "cuisines", "description": "Get a list of all cuisines of restaurants listed in a city. The location/city input can be provided in the following ways -<br><ol><li>Using Zomato City ID<li>Using coordinates of any location within a city</ol><p>List of all restaurants serving a particular cuisine can be obtained using '/search' API with cuisine ID and location details</p>", "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Cuisine"}, "type": "array"}, "description": "successful operation"}, "403": {"description": "Invalid API key"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"collectionFormat": "csv", "required": false, "in": "query", "type": "integer", "name": "city_id", "description": "id of the city for which cuisines are needed"}, {"required": false, "name": "lat", "description": "latitude / longitude of any point within a city", "type": "number", "in": "query"}, {"required": false, "name": "lon", "description": "latitude / longitude of any point within a city", "type": "number", "in": "query"}]}}, "/reviews": {"get": {"tags": ["restaurant"], "summary": "Get restaurant reviews", "produces": ["application/json", "application/xml"], "operationId": "reviews", "description": "Get restaurant reviews using the Zomato restaurant ID. Only 5 latest reviews are available under the Basic API plan.", "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Review"}, "type": "array"}, "description": "successful operation"}, "400": {"description": "Invalid res_id"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": true, "name": "res_id", "description": "id of restaurant whose details are requested", "type": "integer", "in": "query"}, {"required": false, "name": "start", "description": "fetch results after this offset", "type": "integer", "in": "query"}, {"required": false, "name": "count", "description": "max number of results to retrieve", "type": "integer", "in": "query"}]}}, "/collections": {"get": {"tags": ["common"], "summary": "Get Zomato collections in a city", "produces": ["application/json", "application/xml"], "operationId": "collections", "description": "Returns Zomato Restaurant Collections in a City. The location/City input can be provided in the following ways -<br><ol><li>Using Zomato City ID <li>Using coordinates of any location within a city</ol><p>List of all restaurants listed in any particular Zomato Collection can be obtained using the '/search' API with Collection ID and Zomato City ID as the input</p>", "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Collection"}, "type": "array"}, "description": "successful operation"}, "403": {"description": "Invalid city_id"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": false, "name": "city_id", "description": "id of the city for which collections are needed", "type": "integer", "in": "query"}, {"required": false, "name": "lat", "description": "latitude / longitude of any point within a city", "type": "number", "in": "query"}, {"required": false, "name": "lon", "description": "latitude / longitude of any point within a city", "type": "number", "in": "query"}, {"required": false, "name": "count", "description": "max number of results needed", "type": "integer", "in": "query"}]}}, "/locations": {"get": {"tags": ["location"], "summary": "Search for locations", "produces": ["application/json", "application/xml"], "operationId": "locations", "description": "Search for Zomato locations by keyword. Provide coordinates to get better search results", "responses": {"200": {"schema": {"type": "object", "$ref": "#/definitions/Location"}, "description": "successful operation"}, "403": {"description": "Invalid API key"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": true, "name": "query", "description": "suggestion for location name", "type": "string", "in": "query"}, {"required": false, "name": "lat", "description": "latitude", "type": "number", "in": "query"}, {"required": false, "name": "lon", "description": "longitude", "type": "number", "in": "query"}, {"required": false, "name": "count", "description": "max number of results to fetch", "type": "integer", "in": "query"}]}}, "/search": {"get": {"tags": ["restaurant"], "summary": "Search for restaurants", "produces": ["application/json", "application/xml"], "operationId": "search", "description": "The location input can be specified using Zomato location ID or coordinates. Cuisine / Establishment / Collection IDs can be obtained from respective api calls. Get up to 100 restaurants by changing the 'start' and 'count' parameters with the maximum value of count being 20. Partner Access is required to access photos and reviews.<br>Examples:<ol> <li> To search for 'Italian' restaurants in 'Manhattan, New York City', set cuisines = 55, entity_id = 94741 and entity_type = zone</li><li>To search for 'cafes' in 'Manhattan, New York City', set establishment_type = 1, entity_type = zone and entity_id = 94741 </li><li>Get list of all restaurants in 'Trending this Week' collection in 'New York City' by using entity_id = 280, entity_type = city and collection_id = 1</ol>", "responses": {"200": {"schema": {"type": "object", "$ref": "#/definitions/Search"}, "description": "successful"}, "400": {"description": "failed"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": false, "name": "entity_id", "description": "location id", "type": "integer", "in": "query"}, {"required": false, "in": "query", "enum": ["city", "subzone", "zone", "landmark", "metro", "group"], "type": "string", "name": "entity_type", "description": "location type"}, {"required": false, "name": "q", "description": "search keyword", "type": "string", "in": "query"}, {"required": false, "name": "start", "description": "fetch results after offset", "type": "integer", "in": "query"}, {"required": false, "name": "count", "description": "max number of results to display", "type": "integer", "in": "query"}, {"required": false, "name": "lat", "description": "latitude", "type": "number", "in": "query"}, {"required": false, "name": "lon", "description": "longitude", "type": "number", "in": "query"}, {"required": false, "name": "radius", "description": "radius around (lat,lon); to define search area, defined in meters(M)", "type": "number", "in": "query"}, {"collectionFormat": "csv", "name": "cuisines", "description": "list of cuisine id's separated by comma", "type": "string", "in": "query"}, {"collectionFormat": "csv", "name": "establishment_type", "description": "estblishment id obtained from establishments call", "type": "string", "in": "query"}, {"required": false, "name": "collection_id", "description": "collection id obtained from collections call", "type": "string", "in": "query"}, {"required": false, "name": "category", "description": "category ids obtained from categories call", "type": "string", "in": "query"}, {"required": false, "in": "query", "enum": ["cost", "rating", "real_distance"], "type": "string", "name": "sort", "description": "sort restaurants by ..."}, {"required": false, "in": "query", "enum": ["asc", "desc"], "type": "string", "name": "order", "description": "used with 'sort' parameter to define ascending / descending"}]}}, "/categories": {"get": {"tags": ["common"], "summary": "Get list of Categories", "produces": ["application/json", "application/xml"], "operationId": "categories", "description": "Get a list of categories. List of all restaurants categorized under a particular restaurant type can  be obtained using /Search API with Category ID as inputs</p>", "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/Categories"}, "type": "array"}, "description": "successful operation"}, "403": {"description": "Invalid  key"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}]}}, "/cities": {"get": {"tags": ["common"], "summary": "Get city details", "produces": ["application/json", "application/xml"], "operationId": "cities", "description": "Find the Zomato ID and other details for a city . You can obtain the Zomato City ID in one of the following ways:<br><ol> <li>City Name in the Search Query - Returns list of cities matching the query<li>Using coordinates - Identifies the city details based on the coordinates of any location inside a city</ol><p>If you already know the Zomato City ID, this API can be used to get other details of the city.</p>", "responses": {"200": {"schema": {"items": {"$ref": "#/definitions/City"}, "type": "array"}, "description": "successful operation"}, "400": {"description": "Invalid input"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"collectionFormat": "csv", "required": false, "in": "query", "type": "string", "name": "q", "description": "query by city name"}, {"required": false, "name": "lat", "description": "latitude", "type": "number", "in": "query"}, {"required": false, "name": "lon", "description": "longitude", "type": "number", "in": "query"}, {"collectionFormat": "csv", "required": false, "in": "query", "type": "string", "name": "city_ids", "description": "comma separated city_id values"}, {"required": false, "name": "count", "description": "number of max results to display", "type": "integer", "in": "query"}]}}, "/location_details": {"get": {"tags": ["location"], "summary": "Get Zomato location details", "produces": ["application/json", "application/xml"], "operationId": "location_details", "description": "Get Foodie Index, Nightlife Index, Top Cuisines and Best rated restaurants in a given location", "responses": {"200": {"schema": {"type": "object", "$ref": "#/definitions/LocationDetails"}, "description": "successful operation"}, "403": {"description": "Invalid API key"}}, "parameters": [{"required": true, "name": "user-key", "description": "your API key", "type": "string", "in": "header"}, {"required": true, "name": "entity_id", "description": "location id obtained from locations api", "type": "integer", "in": "query"}, {"required": true, "name": "entity_type", "description": "location type obtained from locations api", "type": "string", "in": "query"}]}}}}, "is_public": false, "created_at": "2017-06-28T10:32:47.686Z", "modified_at": "2017-06-30T11:37:47.885Z"}}]